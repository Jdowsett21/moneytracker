{"version":3,"sources":["img/Budgeting Methods_Banner.png","img/Saving-Budget-Piggy.gif","utils/publicFetch.js","actions/authActions.js","reducers/authReducer.js","reducers/accountsReducer.js","reducers/transactionsReducer.js","reducers/monthsReducer.js","reducers/budgetReducer.js","reducers/budgetCategoriesReducer.js","reducers/clickReducer.js","reducers/rootReducer.js","store.js","context/fetchContext.js","components/common/FormSuccess.js","pages/Login.js","AppShell.js","AuthenticatedRoutes.js","components/common/Hyperlink.js","pages/Signup.js","components/common/StyleScrollSpyItem.js","components/common/ScrollSpyItem.js","components/Home/HomeNavBar.js","components/Home/HomeHeader.js","components/Home/BudgetSection.js","components/Home/TrackSection.js","components/Home/SignupSection.js","components/Home/AnalyzeSection.js","pages/Home.js","AuthenticatedNavBar.js","pages/AddTransaction.js","App.js","index.js","components/common/FormInput.js","actions/types.js","components/common/Label.js","img/grivety.jpg","components/common/GradientButton.js","components/common/FormError.js","components/common/NavbarTop.js","actions/transactionActions.js","components/common/NavBarSecondary.js","utils/authFetch.js"],"names":["module","exports","publicFetch","axios","create","baseURL","process","REACT_APP_API_URL","signupValidation","credentials","dispatch","a","setLoading","post","data","type","SIGNUP_SUCCESS","payload","setTimeout","REDIRECT_ON_LOGIN","SIGNUP_ERROR","message","isAdmin","IS_ADMIN","isUserAuthenticated","IS_AUTHENTICATED","loginValidation","LOGIN_SUCCESS","error","LOGIN_ERROR","logout","LOGOUT","setAuthInfo","authAxios","get","USER_LOADED","LOADING","initialState","token","expiresAt","localStorage","getItem","userInfo","JSON","parse","loginSuccess","signupSuccess","signupError","loginError","loading","isAuthenticated","redirectOnLogin","accountList","accountCategories","cash","debt","total","cashPercent","debtPercent","totalPercent","accountLoading","transactionList","hoveredTransactionList","monthNet","monthGraphNet","monthIncome","monthDebt","sixMonthNetTotals","lastSixMonths","moment","subtract","format","sixMonthMaxNet","transactionCategories","categoryTotals","monthNetColor","monthTransactions","transactionLoading","hoveredColor","spendingSum","nonBudgetedIncomeTransactions","nonBudgetedSpendingTransactions","nonBudgetedTransferTransactions","incomeSum","nonBudgetedIncomeSum","nonBudgetedSpendingSum","selectedTransaction","preventTransactionReRender","hoveredMonth","hoveredBudgetMonth","month","barHeight","barTotal","budgetList","budgetIncomeSum","budgetSpendingSum","budgetCategoryList","budgetSubCategories","clickStatus","combineReducers","auth","state","action","removeItem","tokens","length","setItem","stringify","Date","getTime","role","accounts","ADD_ACCOUNT","GET_ACCOUNTS","map","account","balance","FILTER_ACCOUNT_TYPES","Set","accountCategory","ACCOUNT_ERROR","SET_CASH","filter","reduce","accumulator","SET_DEBT","accountType","SET_TOTAL","SET_CASH_PERCENTAGE_BAR","SET_DEBT_PERCENTAGE_BAR","SET_NET_PERCENTAGE_BAR","SET_ACCOUNT_LOADING","transactions","UPDATE_TRANSACTION","transaction","_id","GET_TRANSACTIONS_BY_ACCOUNT_CATEGORY","SET_SELECTED_TRANSACTION","GET_TRANSACTIONS_BY_ACCOUNT","SET_MONTH_NET","amountValue","SET_6_MONTH_NET","shortDate","split","SET_MONTH_TOTALS","paymentType","SET_6_MONTH_MAX","sixMonthMax","amount","previousValue","currentValue","GET_SPENDING_SUM_BY_MONTH_TYPE","some","budget","category","GET_INCOME_SUM_BY_MONTH_TYPE","GET_NON_BUDGETED_SPENDING_TRANSACTIONS","subCategory","GET_NON_BUDGETED_INCOME_TRANSACTIONS","GET_NON_BUDGETED_INCOME_SUM","GET_NON_BUDGETED_SPENDING_SUM","SET_MONTH_NET_PERCENT","monthNetPercent","ADD_TRANSACTION","GET_TRANSACTIONS","SET_HOVERED_MONTH_COLOR","TRANSACTION_ERROR","GET_TRANSACTIONS_BY_MONTH","GET_TRANSACTIONS_BY_CATEGORY","transactionsByCategory","GET_TRANSACTION_CATEGORIES","GET_TRANSACTION_CATEGORY_TOTALS","ALLOW_TRANSACTION_RE_RENDER","SET_TRANSACTION_LIST_NO_BUDGET","PREVENT_TRANSACTION_RE_RENDER","SET_TRANSACTION_LIST_BY_CATEGORY","SET_TRANSACTION_LIST_BY_ACCOUNT","SET_TRANSACTION_LOADING","months","SET_HOVERED_MONTH","SET_HOVERED_BUDGET_MONTH","SET_MONTH","budgets","ADD_BUDGET","UPDATE_BUDGET","DELETE_BUDGET","GET_BUDGETS","BUDGET_INCOME_SUM","budgetLimit","BUDGET_SPENDING_SUM","INCREMENT_BUDGET","DECREMENT_BUDGET","console","log","budgetCategories","ADD_BUDGET_CATEGORY","GET_BUDGET_SUBCATEGORIES","UPDATE_BUDGET_CATEGORY","DELETE_BUDGET_CATEGORY","GET_BUDGETS_CATEGORY","clickable","SET_CLICK","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Provider","createContext","FetchProvider","children","useEffect","defaults","headers","csrfToken","getCsrfToken","value","FormSuccess","text","className","LoginSchema","Yup","shape","email","required","password","connect","to","src","grivety","alt","style","width","href","initialValues","onSubmit","values","validationSchema","FormError","FormInput","ariaLabel","name","placeholder","GradientButton","AppShell","rest","render","Hyperlink","SignupSchema","firstName","lastName","Fragment","Label","StyleScrollSpyItem","id","ScrollSpyItem","HomeNavBar","props","data-toggle","data-target","HomeHeader","BudgetSection","budgetImage","TrackSection","SignupSection","useState","isHoveredSignup","setIsHoveredSignup","isHoveredLogin","setIsHoveredLogin","backgroundColor","onMouseEnter","onMouseLeave","borderColor","Signup","AnalyzeSection","NavbarTop","TransactionSchema","description","addTransaction","NavBarSecondary","accountName","defaultValue","Overview","lazy","Transactions","AddAccount","Trends","Goals","WaysToSave","Budgets","Settings","Profile","LoadingFallback","UnauthenticatedRoutes","exact","path","AppRoutes","fallback","App","ReactDOM","StrictMode","document","getElementById","useField","field","meta","aria-label","touched","size","onClick","logo","setTransactionListByAccount","response","getTransactions","setTransactionLoading","allowTransactionReRender","setTransactionList","preventTransactionReRendering","setTransactionListByCategory","setSelectedTransaction","getMonthTypeSum","getNonBudgetedTransactions","getNonBudgetedTransactionsSum","setHoveredMonthColor","updateTransaction","put","getMonthsTransactions","getAccountTransactions","getTransactionsByAccountCategory","getTransactionCategories","getTransactionTotalByCategory","setMonthNet","setSixMonthMax","setSixMonthNet","setMonthTotals","setMonthNetPercent"],"mappings":"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","file":"static/js/main.c6fa49fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Budgeting Methods_Banner.ad5515e7.png\";","module.exports = __webpack_public_path__ + \"static/media/Saving-Budget-Piggy.4bd1c2e4.gif\";","import axios from 'axios';\r\n\r\nconst publicFetch = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n});\r\n\r\nexport { publicFetch };\r\n","import {\r\n  LOGIN_SUCCESS,\r\n  IS_ADMIN,\r\n  LOGIN_ERROR,\r\n  USER_LOADED,\r\n  LOADING,\r\n  IS_AUTHENTICATED,\r\n  REDIRECT_ON_LOGIN,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_ERROR,\r\n  LOGOUT,\r\n} from '../actions/types';\r\n\r\nimport { publicFetch } from '../utils/publicFetch';\r\nimport { authAxios } from '../utils/authFetch';\r\n\r\nexport const signupValidation = (credentials) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const { data } = await publicFetch.post('auth/signup', credentials);\r\n    dispatch({\r\n      type: SIGNUP_SUCCESS,\r\n      payload: data,\r\n    });\r\n    setTimeout(() => {\r\n      return {\r\n        type: REDIRECT_ON_LOGIN,\r\n      };\r\n    }, 700);\r\n  } catch (err) {\r\n    setLoading();\r\n    dispatch({\r\n      type: SIGNUP_ERROR,\r\n      payload: err.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const isAdmin = () => {\r\n  return {\r\n    type: IS_ADMIN,\r\n  };\r\n};\r\n\r\nexport const isUserAuthenticated = () => {\r\n  return {\r\n    type: IS_AUTHENTICATED,\r\n  };\r\n};\r\nexport const loginValidation = (credentials) => async (dispatch) => {\r\n  const { data } = await publicFetch.post('auth/login', credentials);\r\n  try {\r\n    setLoading();\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: REDIRECT_ON_LOGIN,\r\n      });\r\n    }, 700);\r\n  } catch (error) {\r\n    setLoading();\r\n    dispatch({\r\n      type: LOGIN_ERROR,\r\n      payload: error.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  // const { data } = await authAxios.post('auth/logout');\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n\r\nexport const setAuthInfo = () => async (dispatch) => {\r\n  const { data } = await authAxios.get('/users/me');\r\n  dispatch({\r\n    type: USER_LOADED,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nconst setLoading = () => {\r\n  return {\r\n    type: LOADING,\r\n  };\r\n};\r\n","import {\r\n  SIGNUP_SUCCESS,\r\n  IS_ADMIN,\r\n  SIGNUP_ERROR,\r\n  USER_LOADED,\r\n  LOGIN_SUCCESS,\r\n  IS_AUTHENTICATED,\r\n  LOGIN_ERROR,\r\n  LOADING,\r\n  REDIRECT_ON_LOGIN,\r\n  LOGOUT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: null,\r\n  expiresAt: localStorage.getItem('expiresAt'),\r\n  userInfo: JSON.parse(localStorage.getItem('userInfo')),\r\n  loginSuccess: false,\r\n  signupSuccess: false,\r\n  signupError: '',\r\n  loginError: '',\r\n  loading: false,\r\n  isAuthenticated: false,\r\n  redirectOnLogin: false,\r\n  isAdmin: false,\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case LOGOUT:\r\n      localStorage.removeItem('expiresAt');\r\n      localStorage.removeItem('userInfo');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        expiresAt: null,\r\n        userInfo: {},\r\n        signupSuccess: '',\r\n        loginSuccess: '',\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        redirectOnLogin: false,\r\n        isAdmin: false,\r\n      };\r\n    case LOGIN_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        loginError: action.payload.error.message,\r\n      };\r\n    case SIGNUP_ERROR:\r\n      return {\r\n        ...state,\r\n        userInfo: null,\r\n        loading: false,\r\n        signupError: action.payload.error.message,\r\n      };\r\n\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        token: action.payload.tokens[action.payload.tokens.length - 1].token,\r\n        userInfo: JSON.parse(localStorage.getItem('userInfo')),\r\n        // token: action.payload.token,\r\n        expiresAt: localStorage.getItem('expiresAt'),\r\n        loading: false,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        token: action.payload.token,\r\n        expiresAt: localStorage.setItem('expiresAt', action.payload.expiresAt),\r\n        userInfo: localStorage.setItem(\r\n          'userInfo',\r\n          JSON.stringify(action.payload.userInfo)\r\n        ),\r\n        loginSuccess: action.payload.message,\r\n        loading: false,\r\n        redirectOnLogin: true,\r\n      };\r\n    case IS_AUTHENTICATED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated:\r\n          new Date().getTime() / 1000 < state.expiresAt ? true : false,\r\n      };\r\n    case IS_ADMIN:\r\n      return {\r\n        ...state,\r\n        isAdmin:\r\n          state.userInfo && state.userInfo.role === 'admin' ? true : false,\r\n      };\r\n    case SIGNUP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        token: action.payload.token,\r\n        expiresAt: localStorage.setItem('expiresAt', action.payload.expiresAt),\r\n        userInfo: localStorage.setItem(\r\n          'userInfo',\r\n          JSON.stringify(action.payload.userInfo)\r\n        ),\r\n        signupSuccess: action.payload.message,\r\n        loading: false,\r\n        redirectOnLogin: true,\r\n      };\r\n\r\n    case REDIRECT_ON_LOGIN:\r\n      return {\r\n        ...state,\r\n        redirectOnLogin: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  FILTER_ACCOUNT_TYPES,\r\n  ADD_ACCOUNT,\r\n  SET_CASH,\r\n  SET_DEBT,\r\n  SET_ACCOUNT_LOADING,\r\n  ACCOUNT_ERROR,\r\n  SET_TOTAL,\r\n  GET_ACCOUNTS,\r\n  SET_CASH_PERCENTAGE_BAR,\r\n  SET_DEBT_PERCENTAGE_BAR,\r\n  SET_NET_PERCENTAGE_BAR,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  accountList: [],\r\n  accountCategories: null,\r\n  cash: 0,\r\n  debt: 0,\r\n  total: 0,\r\n  cashPercent: 0.0001,\r\n  debtPercent: 0.0001,\r\n  totalPercent: 0.0001,\r\n  accountLoading: false,\r\n  error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_ACCOUNT:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        accountList: [...state.accountList, action.payload],\r\n      };\r\n    case GET_ACCOUNTS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        accountList: action.payload.map((account) =>\r\n          account.balance < 0\r\n            ? {\r\n                ...account,\r\n                balance: account.balance * -1,\r\n              }\r\n            : account\r\n        ),\r\n      };\r\n    case FILTER_ACCOUNT_TYPES:\r\n      return {\r\n        ...state,\r\n        accountCategories: [\r\n          ...new Set(\r\n            state.accountList.map((account) => account.accountCategory)\r\n          ),\r\n        ],\r\n      };\r\n    case ACCOUNT_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case SET_CASH:\r\n      return {\r\n        ...state,\r\n        cash: state.accountList\r\n          .filter((account) => account.accountCategory === 'Cash')\r\n          .reduce((accumulator, accounts) => accounts.balance + accumulator, 0),\r\n      };\r\n\r\n    case SET_DEBT:\r\n      return {\r\n        ...state,\r\n        debt: state.accountList\r\n          .filter(\r\n            (account) =>\r\n              account.accountCategory === 'Credit' ||\r\n              account.accountType === 'Loan'\r\n          )\r\n          .reduce((accumulator, accounts) => accounts.balance + accumulator, 0),\r\n      };\r\n    case SET_TOTAL:\r\n      return {\r\n        ...state,\r\n        total:\r\n          state.cash < state.debt\r\n            ? state.debt - state.cash\r\n            : state.cash - state.debt,\r\n      };\r\n    case SET_CASH_PERCENTAGE_BAR:\r\n      return {\r\n        ...state,\r\n        cashPercent:\r\n          state.cash > state.debt\r\n            ? '75%'\r\n            : `${(state.cash / state.debt) * 75}%`,\r\n      };\r\n    case SET_DEBT_PERCENTAGE_BAR:\r\n      return {\r\n        ...state,\r\n        debtPercent:\r\n          state.cash < state.debt\r\n            ? '75%'\r\n            : `${(state.debt / state.cash) * 75}%`,\r\n      };\r\n    case SET_NET_PERCENTAGE_BAR:\r\n      return {\r\n        ...state,\r\n        totalPercent:\r\n          state.cash > state.debt\r\n            ? `${(state.total / state.cash) * 75}%`\r\n            : `${(state.total / state.debt) * 75}%`,\r\n      };\r\n    case SET_ACCOUNT_LOADING:\r\n      return {\r\n        ...state,\r\n        accountLoading: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_TRANSACTION,\r\n  GET_TRANSACTIONS,\r\n  UPDATE_TRANSACTION,\r\n  SET_TRANSACTION_LOADING,\r\n  SET_MONTH_NET,\r\n  TRANSACTION_ERROR,\r\n  GET_NON_BUDGETED_INCOME_SUM,\r\n  GET_NON_BUDGETED_SPENDING_SUM,\r\n  SET_HOVERED_MONTH_COLOR,\r\n  GET_TRANSACTIONS_BY_ACCOUNT_CATEGORY,\r\n  GET_INCOME_SUM_BY_MONTH_TYPE,\r\n  GET_SPENDING_SUM_BY_MONTH_TYPE,\r\n  GET_TRANSACTIONS_BY_MONTH,\r\n  SET_SELECTED_TRANSACTION,\r\n  GET_TRANSACTION_CATEGORIES,\r\n  ALLOW_TRANSACTION_RE_RENDER,\r\n  GET_TRANSACTIONS_BY_ACCOUNT,\r\n  SET_TRANSACTION_LIST_NO_BUDGET,\r\n  GET_NON_BUDGETED_SPENDING_TRANSACTIONS,\r\n  GET_NON_BUDGETED_INCOME_TRANSACTIONS,\r\n  SET_6_MONTH_NET,\r\n  GET_TRANSACTIONS_BY_CATEGORY,\r\n  GET_TRANSACTION_CATEGORY_TOTALS,\r\n  SET_MONTH_TOTALS,\r\n  SET_6_MONTH_MAX,\r\n  SET_MONTH_NET_PERCENT,\r\n  PREVENT_TRANSACTION_RE_RENDER,\r\n  SET_TRANSACTION_LIST_BY_CATEGORY,\r\n  SET_TRANSACTION_LIST_BY_ACCOUNT,\r\n} from '../actions/types';\r\nimport moment from 'moment';\r\nconst initialState = {\r\n  transactionList: [],\r\n  hoveredTransactionList: [],\r\n  monthNet: null,\r\n  monthGraphNet: null,\r\n  monthIncome: 0,\r\n  monthDebt: 0,\r\n  sixMonthNetTotals: 0,\r\n  lastSixMonths: [\r\n    moment().subtract(5, 'months').format('MMM'),\r\n    moment().subtract(4, 'months').format('MMM'),\r\n    moment().subtract(3, 'months').format('MMM'),\r\n    moment().subtract(2, 'months').format('MMM'),\r\n    moment().subtract(1, 'months').format('MMM'),\r\n    moment().format('MMM'),\r\n  ],\r\n  sixMonthMaxNet: 0,\r\n  transactionCategories: [],\r\n  categoryTotals: [],\r\n  monthNetColor: null,\r\n  monthTransactions: [],\r\n  transactionLoading: false,\r\n  hoveredColor: null,\r\n  error: null,\r\n  spendingSum: 0,\r\n  //spending transactions with no budget category\r\n  nonBudgetedIncomeTransactions: [],\r\n  nonBudgetedSpendingTransactions: [],\r\n  nonBudgetedTransferTransactions: [],\r\n  incomeSum: 0,\r\n  nonBudgetedIncomeSum: 0,\r\n  nonBudgetedSpendingSum: 0,\r\n  //transaction that is clicked on in transaction table\r\n  selectedTransaction: '',\r\n  preventTransactionReRender: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_TRANSACTION:\r\n      return {\r\n        ...state,\r\n        transactionList: state.transactionList.map((transaction) =>\r\n          transaction._id === action.payload._id ? action.payload : transaction\r\n        ),\r\n      };\r\n    case GET_TRANSACTIONS_BY_ACCOUNT_CATEGORY:\r\n      return {\r\n        ...state,\r\n        transactionList: action.payload,\r\n      };\r\n    case SET_SELECTED_TRANSACTION:\r\n      return {\r\n        ...state,\r\n        selectedTransaction: action.payload,\r\n      };\r\n\r\n    case GET_TRANSACTIONS_BY_ACCOUNT:\r\n      return {\r\n        ...state,\r\n        transactionList: action.payload,\r\n      };\r\n    case SET_MONTH_NET:\r\n      return {\r\n        ...state,\r\n        monthNet: action.payload.reduce(\r\n          (accumulator, transaction) => transaction.amountValue + accumulator,\r\n          0\r\n        ),\r\n        monthNetColor:\r\n          action.payload.reduce(\r\n            (accumulator, transaction) => transaction.amountValue + accumulator,\r\n            0\r\n          ) >= 0\r\n            ? '#40c740'\r\n            : '#bc1c04',\r\n      };\r\n\r\n    //created amount.Value in transaction schema to easily determine net without\r\n    //having to determine income and debt\r\n    //month totals still determines all three as all three are needed for that action\r\n    case SET_6_MONTH_NET:\r\n      return {\r\n        ...state,\r\n        sixMonthNetTotals: state.lastSixMonths.map((month) => {\r\n          return (\r\n            state.transactionList &&\r\n            state.transactionList\r\n              .filter(\r\n                (transaction) => month === transaction.shortDate.split(',')[0]\r\n              )\r\n              .reduce(\r\n                (accumulator, transaction) =>\r\n                  transaction.amountValue + accumulator,\r\n                0\r\n              )\r\n          );\r\n        }),\r\n      };\r\n\r\n    //needed to combine income debt and net into one transaction in order to properly set each value\r\n    case SET_MONTH_TOTALS:\r\n      return {\r\n        ...state,\r\n        monthIncome:\r\n          state.transactionList &&\r\n          state.transactionList\r\n            .filter(\r\n              (transaction) =>\r\n                action.payload === transaction.shortDate.split(',')[0]\r\n            )\r\n            .reduce((accumulator, transaction) => {\r\n              if (transaction.paymentType === 'Deposit') {\r\n                return transaction.amountValue + accumulator;\r\n              } else return 0 + accumulator;\r\n            }, 0),\r\n        monthDebt:\r\n          state.transactionList &&\r\n          state.transactionList\r\n            .filter(\r\n              (transaction) =>\r\n                action.payload === transaction.shortDate.split(',')[0]\r\n            )\r\n            .reduce((accumulator, transaction) => {\r\n              if (transaction.paymentType === 'Withdrawal') {\r\n                return (transaction.amountValue + accumulator) * -1;\r\n              } else return 0 + accumulator;\r\n            }, 0),\r\n        monthGraphNet:\r\n          state.transactionList &&\r\n          state.transactionList\r\n            .filter(\r\n              (transaction) =>\r\n                action.payload === transaction.shortDate.split(',')[0]\r\n            )\r\n            .reduce(\r\n              (accumulator, transaction) =>\r\n                transaction.amountValue + accumulator,\r\n              0\r\n            ),\r\n      };\r\n\r\n    //this action is to determine the top and bottom value of the graph in the overview trends card for month net\r\n    case SET_6_MONTH_MAX:\r\n      return {\r\n        ...state,\r\n        sixMonthMax:\r\n          state.sixMonthNetTotals &&\r\n          state.sixMonthNetTotals.length > 0 &&\r\n          state.sixMonthNetTotals\r\n            .map((amount) => (amount < 0 ? amount * -1 : amount))\r\n            .reduce((previousValue, currentValue) =>\r\n              previousValue > currentValue ? previousValue : currentValue\r\n            ),\r\n      };\r\n\r\n    //only add to sum if it is a budget item\r\n    case GET_SPENDING_SUM_BY_MONTH_TYPE:\r\n      return {\r\n        ...state,\r\n        spendingSum: action.payload.data\r\n          .filter((transaction) =>\r\n            action.payload.budgetList.some(\r\n              (budget) => transaction.category === budget.category\r\n            )\r\n          )\r\n          .reduce(\r\n            (accumulator, transaction) => accumulator + transaction.amount,\r\n            0\r\n          ),\r\n      };\r\n    //include all income\r\n    case GET_INCOME_SUM_BY_MONTH_TYPE:\r\n      return {\r\n        ...state,\r\n        incomeSum: action.payload.data\r\n          .filter((transaction) =>\r\n            action.payload.budgetList.some(\r\n              (budget) => transaction.category === budget.category\r\n            )\r\n          )\r\n          .reduce(\r\n            (accumulator, transaction) => transaction.amount + accumulator,\r\n            0\r\n          ),\r\n      };\r\n\r\n    //non budgeted spending AND Transfers\r\n    case GET_NON_BUDGETED_SPENDING_TRANSACTIONS:\r\n      return {\r\n        ...state,\r\n        nonBudgetedSpendingTransactions: action.payload.data.filter(\r\n          (transaction) =>\r\n            !action.payload.budgetList.some(\r\n              (budget) =>\r\n                transaction.subCategory === budget.subCategory &&\r\n                transaction.category === budget.category\r\n            )\r\n        ),\r\n      };\r\n\r\n    //slist of non budgeted income transactions\r\n    case GET_NON_BUDGETED_INCOME_TRANSACTIONS:\r\n      return {\r\n        ...state,\r\n        nonBudgetedIncomeTransactions: action.payload.data.filter(\r\n          (transaction) =>\r\n            !action.payload.budgetList.some(\r\n              (budget) =>\r\n                transaction.subCategory === budget.subCategory &&\r\n                transaction.category === budget.category\r\n            )\r\n        ),\r\n      };\r\n\r\n    //sum of non budgeted income\r\n    case GET_NON_BUDGETED_INCOME_SUM:\r\n      return {\r\n        ...state,\r\n        nonBudgetedIncomeSum: action.payload.data\r\n          .filter(\r\n            (transaction) =>\r\n              !action.payload.budgetList.some(\r\n                (budget) =>\r\n                  transaction.subCategory === budget.subCategory &&\r\n                  transaction.category === budget.category\r\n              )\r\n          )\r\n          .reduce(\r\n            (accumulator, currentValue) =>\r\n              currentValue.amountValue + accumulator,\r\n            0\r\n          ),\r\n      };\r\n\r\n    //sum of non budgeted spending items\r\n    //cant use .amount because then transfers will be\r\n    //included in total value\r\n    //need to use .amountValue so transfers are worth 0\r\n    //then multiply by -1\r\n    case GET_NON_BUDGETED_SPENDING_SUM:\r\n      return {\r\n        ...state,\r\n        nonBudgetedSpendingSum: action.payload.data\r\n          .filter(\r\n            (transaction) =>\r\n              !action.payload.budgetList.some(\r\n                (budget) =>\r\n                  transaction.subCategory === budget.subCategory &&\r\n                  transaction.category === budget.category\r\n              )\r\n          )\r\n          .reduce(\r\n            (accumulator, currentValue) =>\r\n              (accumulator + currentValue.amountValue) * -1,\r\n            0\r\n          ),\r\n      };\r\n\r\n    //this action is used to determine the height of the bars for the month net graph on the overview page\r\n    case SET_MONTH_NET_PERCENT:\r\n      return {\r\n        ...state,\r\n        monthNetPercent:\r\n          state.monthIncome > state.monthDebt\r\n            ? `${(state.total / state.monthIncome) * 75}%`\r\n            : `${(state.total / state.monthDebt) * 75}%`,\r\n      };\r\n\r\n    //http post request to add an account\r\n    case ADD_TRANSACTION:\r\n      return {\r\n        ...state,\r\n        transactionList: [...state.transactionList, action.payload],\r\n        transactionLoading: false,\r\n        error: null,\r\n      };\r\n\r\n    //http get request for all accounts\r\n    case GET_TRANSACTIONS:\r\n      return {\r\n        ...state,\r\n        transactionList: action.payload,\r\n        transactionLoading: false,\r\n        error: null,\r\n      };\r\n\r\n    //http request for a single months transactions in order to determine color\r\n    //on hover for the month net on the budgets page\r\n    //setting color for hovered month in budget page, state was setting it too early\r\n    //and for previous month\r\n    case SET_HOVERED_MONTH_COLOR:\r\n      return {\r\n        ...state,\r\n        hoveredColor:\r\n          action.payload === ''\r\n            ? '#e9ecef'\r\n            : action.payload.reduce(\r\n                (accumulator, transaction) =>\r\n                  transaction.amountValue + accumulator,\r\n                0\r\n              ) >= 0\r\n            ? '#40c740'\r\n            : '#bc1c04',\r\n\r\n        transactionLoading: false,\r\n        error: null,\r\n      };\r\n\r\n    //if http request has an error\r\n    case TRANSACTION_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n\r\n    case GET_TRANSACTIONS_BY_MONTH:\r\n      return {\r\n        ...state,\r\n        monthTransactions: action.payload,\r\n      };\r\n\r\n    //filtering transactions by category\r\n    case GET_TRANSACTIONS_BY_CATEGORY:\r\n      return {\r\n        ...state,\r\n        transactionsByCategory: action.payload,\r\n      };\r\n\r\n    //array of categories in order to map with budget categories in budgets page\r\n    case GET_TRANSACTION_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        transactionCategories: [\r\n          ...new Set(\r\n            state.monthTransactions.map((transaction) => transaction.category)\r\n          ),\r\n        ],\r\n      };\r\n\r\n    //setting category total inside the budget bar, if there are no transactions of that\r\n    //category then the category total is set to 0\r\n    //this creates an array of objects with the category and the total for the month\r\n    //that is  selected in the budget page\r\n    //this is then mapped out in progress bars\r\n\r\n    case GET_TRANSACTION_CATEGORY_TOTALS:\r\n      return {\r\n        ...state,\r\n        categoryTotals: action.payload.map((budget) => {\r\n          return state.monthTransactions.length === 0\r\n            ? {\r\n                category: budget.category,\r\n                subCategory: budget.subCategory,\r\n                total: 0,\r\n              }\r\n            : {\r\n                category: budget.category,\r\n                subCategory: budget.subCategory,\r\n                total: state.monthTransactions\r\n                  .filter(\r\n                    (transaction) =>\r\n                      //ensuring categories with no subcategory are not all summed together and instead filtered by subcategory\r\n                      transaction.subCategory === budget.subCategory &&\r\n                      transaction.category === budget.category\r\n                  )\r\n                  //eslint-disable-next-line\r\n                  .reduce((accumulator, transaction) => {\r\n                    if (\r\n                      transaction.subCategory === budget.subCategory &&\r\n                      transaction.category === budget.category\r\n                    ) {\r\n                      return transaction.amountValue + accumulator;\r\n                    }\r\n                  }, 0),\r\n              };\r\n        }),\r\n      };\r\n\r\n    case ALLOW_TRANSACTION_RE_RENDER:\r\n      return {\r\n        ...state,\r\n        preventTransactionReRender: false,\r\n      };\r\n\r\n    //when you click on everything else or other income\r\n    //on budgets page underneath budget progress bars\r\n    //takes you to transactions page with those budgets\r\n    case SET_TRANSACTION_LIST_NO_BUDGET:\r\n      return {\r\n        ...state,\r\n        transactionList: action.payload.transactions.filter(\r\n          (transaction) =>\r\n            transaction.shortDate.split(',')[0] === action.payload.month\r\n        ),\r\n        //this ensures that when clicking on the other items\r\n        //button in the budgets page, all transactions are not loaded\r\n      };\r\n\r\n    case PREVENT_TRANSACTION_RE_RENDER:\r\n      return {\r\n        ...state,\r\n        preventTransactionReRender: true,\r\n      };\r\n    case SET_TRANSACTION_LIST_BY_CATEGORY:\r\n      return {\r\n        ...state,\r\n        transactionList: action.payload,\r\n      };\r\n    case SET_TRANSACTION_LIST_BY_ACCOUNT:\r\n      return {\r\n        ...state,\r\n        transactionList: action.payload,\r\n      };\r\n\r\n    //loading bar for page\r\n    case SET_TRANSACTION_LOADING:\r\n      return {\r\n        ...state,\r\n        transactionLoading: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SET_HOVERED_BUDGET_MONTH,\r\n  SET_HOVERED_MONTH,\r\n  SET_MONTH,\r\n} from '../actions/types';\r\nimport moment from 'moment';\r\nconst initialState = {\r\n  hoveredMonth: moment().format('MMM'),\r\n  hoveredBudgetMonth: '',\r\n  month: moment().format('MMM'),\r\n  barHeight: 0,\r\n  barTotal: 0,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_HOVERED_MONTH:\r\n      return {\r\n        ...state,\r\n        hoveredMonth: moment()\r\n          .subtract(5 - action.payload, 'months')\r\n          .format('MMM'),\r\n      };\r\n    //adding the ternary function for '' allows us to reset month to ''\r\n    //every time we are not hovered\r\n    case SET_HOVERED_BUDGET_MONTH:\r\n      return {\r\n        ...state,\r\n        hoveredBudgetMonth:\r\n          action.payload === ''\r\n            ? ''\r\n            : moment()\r\n                .subtract(11 - action.payload, 'months')\r\n                .format('MMM'),\r\n      };\r\n    case SET_MONTH:\r\n      return {\r\n        ...state,\r\n        month: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_BUDGET,\r\n  GET_BUDGETS,\r\n  DELETE_BUDGET,\r\n  BUDGET_INCOME_SUM,\r\n  BUDGET_SPENDING_SUM,\r\n  INCREMENT_BUDGET,\r\n  DECREMENT_BUDGET,\r\n  UPDATE_BUDGET,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  budgetList: [],\r\n  budgetIncomeSum: 0,\r\n  budgetSpendingSum: 0,\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_BUDGET:\r\n      return {\r\n        ...state,\r\n        budgetList: [...state.budgetList, action.payload],\r\n      };\r\n    case UPDATE_BUDGET:\r\n      return {\r\n        ...state,\r\n        budgetList: state.budgetList.map((budget) =>\r\n          budget._id === action.payload._id ? action.payload : budget\r\n        ),\r\n      };\r\n    case DELETE_BUDGET:\r\n      return {\r\n        ...state,\r\n        budgetList: action.payload,\r\n      };\r\n\r\n    case GET_BUDGETS:\r\n      return {\r\n        ...state,\r\n        budgetList: action.payload,\r\n      };\r\n\r\n    //sets spending and income sums for the months budget\r\n    case BUDGET_INCOME_SUM:\r\n      return {\r\n        ...state,\r\n        budgetIncomeSum: action.payload.reduce(\r\n          (accumulator, budget) => budget.budgetLimit + accumulator,\r\n          0\r\n        ),\r\n      };\r\n    case BUDGET_SPENDING_SUM:\r\n      return {\r\n        ...state,\r\n        budgetSpendingSum: action.payload.reduce(\r\n          (accumulator, budget) => budget.budgetLimit + accumulator,\r\n          0\r\n        ),\r\n      };\r\n\r\n    case INCREMENT_BUDGET:\r\n      return {\r\n        ...state,\r\n        budgetList: state.budgetList.map((budget) =>\r\n          budget._id === action.payload._id ? action.payload : budget\r\n        ),\r\n      };\r\n    case DECREMENT_BUDGET:\r\n      return {\r\n        ...state,\r\n        budgetList: state.budgetList.map((budget) => {\r\n          console.log(budget);\r\n          return budget._id === action.payload._id ? action.payload : budget;\r\n        }),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_BUDGET_CATEGORY,\r\n  GET_BUDGETS_CATEGORY,\r\n  DELETE_BUDGET_CATEGORY,\r\n  UPDATE_BUDGET_CATEGORY,\r\n  GET_BUDGET_SUBCATEGORIES,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  budgetCategoryList: [],\r\n  budgetSubCategories: null,\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_BUDGET_CATEGORY:\r\n      return {\r\n        ...state,\r\n        budgetCategoryList: [...state.budgetCategoryList, action.payload],\r\n      };\r\n\r\n    case GET_BUDGET_SUBCATEGORIES:\r\n      return {\r\n        ...state,\r\n        budgetSubCategories: action.payload,\r\n      };\r\n    case UPDATE_BUDGET_CATEGORY:\r\n      return {\r\n        ...state,\r\n        budgetCategoryList: state.budgetCategoryList.map((budget) =>\r\n          budget._id === action.payload._id ? action.payload : budget\r\n        ),\r\n      };\r\n    case DELETE_BUDGET_CATEGORY:\r\n      return {\r\n        ...state,\r\n        budgetCategoryList: action.payload,\r\n      };\r\n\r\n    case GET_BUDGETS_CATEGORY:\r\n      return {\r\n        ...state,\r\n        budgetCategoryList: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_CLICK } from '../actions/types';\r\n\r\nconst initialState = {\r\n  clickStatus: '',\r\n};\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CLICK:\r\n      return {\r\n        ...state,\r\n        clickStatus: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport authReducer from '../reducers/authReducer';\r\nimport accountsReducer from '../reducers/accountsReducer';\r\nimport transactionsReducer from '../reducers/transactionsReducer';\r\nimport monthsReducer from '../reducers/monthsReducer';\r\nimport budgetReducer from '../reducers/budgetReducer';\r\nimport budgetCategoriesReducer from '../reducers/budgetCategoriesReducer';\r\nimport clickReducer from '../reducers/clickReducer';\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  accounts: accountsReducer,\r\n  transactions: transactionsReducer,\r\n  months: monthsReducer,\r\n  budgets: budgetReducer,\r\n  budgetCategories: budgetCategoriesReducer,\r\n  clickable: clickReducer,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/rootReducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { createContext, useEffect } from 'react';\r\nimport { authAxios } from '../utils/authFetch';\r\n\r\nconst FetchContext = createContext();\r\nconst { Provider } = FetchContext;\r\nfunction FetchProvider({ children }) {\r\n  useEffect(() => {\r\n    const getCsrfToken = async () => {\r\n      const { data } = await authAxios.get('/users/csrf-token');\r\n      authAxios.defaults.headers['X-CSRF-Token'] = data.csrfToken;\r\n    };\r\n    getCsrfToken();\r\n  }, []);\r\n\r\n  // authAxios.interceptors.response.use(\r\n  //   (response) => {\r\n  //     return response;\r\n  //   },\r\n  //   (error) => {\r\n  //     const code = error && error.response ? error.response.status : 0;\r\n  //     if (code === 401 || code === 403) {\r\n  //       console.log('error-code', code);\r\n  //     }\r\n  //     return Promise.reject(error);\r\n  //   }\r\n  // );\r\n  return <Provider value={{ authAxios }}>{children}</Provider>;\r\n}\r\n\r\nexport { FetchProvider, FetchContext };\r\n","import React from 'react';\r\n\r\nconst FormSuccess = ({ text }) => (\r\n  <section className=''>\r\n    <p className=''>\r\n      <span className=''>{text}</span>\r\n    </p>\r\n  </section>\r\n);\r\n\r\nexport default FormSuccess;\r\n","import React, { useEffect } from 'react';\r\nimport { Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport grivety from '../img/grivety.jpg';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  isUserAuthenticated,\r\n  isAdmin,\r\n  setAuthInfo,\r\n  loginValidation,\r\n} from '../actions/authActions';\r\nimport FormInput from './../components/common/FormInput';\r\n\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport GradientButton from './../components/common/GradientButton';\r\nimport FormSuccess from './../components/common/FormSuccess';\r\nimport FormError from './../components/common/FormError';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n  email: Yup.string().required('Email is required'),\r\n  password: Yup.string().required('Password is required'),\r\n});\r\n\r\nconst Login = ({\r\n  auth: { loginError, isAuthenticated, loginSuccess, loading, redirectOnLogin },\r\n  setAuthInfo,\r\n  loginValidation,\r\n  isUserAuthenticated,\r\n  isAdmin,\r\n}) => {\r\n  useEffect(() => {\r\n    isUserAuthenticated();\r\n\r\n    return () => {\r\n      setAuthInfo();\r\n      isAdmin();\r\n    };\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {(redirectOnLogin || isAuthenticated) && <Redirect to='/overview' />}\r\n      <section className='logo-background fill-window'>\r\n        <div className='container'>\r\n          <div className='row'>\r\n            <div className='col-md-4 m-auto text-center'>\r\n              <img src={grivety} alt='' className='img-fluid grivety mb-0' />\r\n            </div>\r\n          </div>\r\n          <div className='col-md-6 m-auto'>\r\n            <div\r\n              className='card bg-dark border-primary m-auto'\r\n              style={{ width: '300px' }}\r\n            >\r\n              <div className='card-body'>\r\n                <div className='text-center mb-3 '>\r\n                  <h5 className='card-title '>Sign In</h5>\r\n                  <span className='medium-font'>\r\n                    One Account For All Your Bank Accounts\r\n                  </span>\r\n                  <div className=''>\r\n                    <a href='/#' className=' m-auto small-font'>\r\n                      Learn more\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n                <Formik\r\n                  initialValues={{ email: '', password: '' }}\r\n                  onSubmit={(values) => loginValidation(values)}\r\n                  validationSchema={LoginSchema}\r\n                >\r\n                  {() => (\r\n                    <Form>\r\n                      {' '}\r\n                      {loginSuccess && <FormSuccess text={loginSuccess} />}\r\n                      {loginError && <FormError text={loginError} />}\r\n                      <div className='form-group'>\r\n                        <label>Email or user ID</label>\r\n                        <FormInput\r\n                          ariaLabel='Email address'\r\n                          name='email'\r\n                          type='email'\r\n                          placeholder='Email address'\r\n                        />\r\n                      </div>\r\n                      <div className='form-group'>\r\n                        <label>Password</label>\r\n                        <FormInput\r\n                          ariaLabel='Password'\r\n                          name='password'\r\n                          type='password'\r\n                          placeholder='Password'\r\n                        />\r\n                      </div>\r\n                      <div className='form-group'>\r\n                        <label>Remember Me</label>\r\n                        <input type='checkbox' className='ml-2' />\r\n                      </div>\r\n                      <GradientButton\r\n                        type='submit'\r\n                        text='Login'\r\n                        className='btn btn-primary'\r\n                        loading={loading}\r\n                      />\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n\r\n                <div className='text-center small-font'>\r\n                  <cite>\r\n                    By clicking Sign In, you agree to our <a href='/#'>Terms</a>{' '}\r\n                    and have read and acknowledge our{' '}\r\n                    <a href='/#'>US Privacy Statement</a>\r\n                  </cite>\r\n                </div>\r\n              </div>\r\n              <div className='card-footer text-center'>\r\n                <div className='media  '>\r\n                  <a href='/#' className=' m-auto small font'>\r\n                    I forgot my user ID or password\r\n                  </a>\r\n                </div>\r\n                <p className='small-font text-center'>\r\n                  New to Intuit? <Link to='/signup'>Create an account</Link>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <footer className='text-center extra-small-font mt-2'>\r\n            <div className='row'>\r\n              <div className='col-md-5 m-auto px-3'>\r\n                <div className='mb-2'>\r\n                  <a href='/#' className=' mr-2 '>\r\n                    Legal\r\n                  </a>\r\n                  <a href='/#' className=' mr-2'>\r\n                    Privacy\r\n                  </a>\r\n                  <a href='/#'>Security</a>\r\n                </div>\r\n                <p>\r\n                  © 2020 Grevity, Inc. All rights reserved. Grevity is a\r\n                  registered trademarks of Grevity Inc. Terms and conditions,\r\n                  features, support, pricing, and service options subject to\r\n                  change without notice.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </footer>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nLogin.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  loginValidation: PropTypes.func.isRequired,\r\n  setAuthInfo: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  loginValidation,\r\n  isUserAuthenticated,\r\n  setAuthInfo,\r\n  isAdmin,\r\n})(Login);\r\n","import React from 'react';\r\n\r\nfunction AppShell({ children }) {\r\n  return <div>{children}</div>;\r\n}\r\n\r\nexport default AppShell;\r\n","import React from 'react';\r\nimport AppShell from './AppShell';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nfunction AuthenticatedRoutes({ isAuthenticated, children, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={() =>\r\n        isAuthenticated ? <AppShell>{children}</AppShell> : <Redirect to='/' />\r\n      }\r\n    ></Route>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps)(AuthenticatedRoutes);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Hyperlink = ({ text, to }) => (\r\n  <Link to={to} className=''>\r\n    {text}\r\n  </Link>\r\n);\r\n\r\nexport default Hyperlink;\r\n","import React, { useEffect } from 'react';\r\nimport { Form, Formik } from 'formik';\r\nimport { connect } from 'react-redux';\r\nimport grivety from '../img/grivety.jpg';\r\n\r\nimport {\r\n  signupValidation,\r\n  isUserAuthenticated,\r\n  setAuthInfo,\r\n  isAdmin,\r\n} from '../actions/authActions';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Hyperlink from './../components/common/Hyperlink';\r\nimport FormSuccess from './../components/common/FormSuccess';\r\nimport FormError from './../components/common/FormError';\r\nimport Label from './../components/common/Label';\r\nimport GradientButton from './../components/common/GradientButton';\r\nimport FormInput from './../components/common/FormInput';\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  firstName: Yup.string().required('First name is required'),\r\n  lastName: Yup.string().required('Last name is required'),\r\n\r\n  email: Yup.string().email('Invalid email').required('Email is required'),\r\n  password: Yup.string().required('Password is required'),\r\n});\r\n\r\nfunction Signup({\r\n  auth: {\r\n    signupSuccess,\r\n    signupError,\r\n    isAuthenticated,\r\n    redirectOnLogin,\r\n    loading,\r\n  },\r\n  isUserAuthenticated,\r\n  setAuthInfo,\r\n  isAdmin,\r\n  signupValidation,\r\n}) {\r\n  useEffect(() => {\r\n    isUserAuthenticated();\r\n    return () => {\r\n      setAuthInfo();\r\n      isAdmin();\r\n    };\r\n  }, [isUserAuthenticated, setAuthInfo, isAdmin]);\r\n  return (\r\n    <React.Fragment>\r\n      {(redirectOnLogin || isAuthenticated) && <Redirect to='/overview' />}\r\n      <section className='logo-background fill-window'>\r\n        <div className='container'>\r\n          <div className='row'>\r\n            <div className='col-md-4 m-auto text-center'>\r\n              <img src={grivety} alt='' className='img-fluid grivety mb-0' />\r\n            </div>\r\n          </div>\r\n          <div className='col-md-6 m-auto'>\r\n            <div\r\n              className='card bg-dark border-primary m-auto'\r\n              style={{ width: '300px' }}\r\n            >\r\n              <div className='card-body'>\r\n                <div className='text-center mb-3 '>\r\n                  <h5 className='card-title '>Signup</h5>\r\n                  <span className='medium-font'>\r\n                    One Account For All Your Bank Accounts\r\n                  </span>\r\n                  <div className=''>\r\n                    <a href='/#' className=' m-auto small-font'>\r\n                      Learn more\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n\r\n                <p>\r\n                  Already have an account?{' '}\r\n                  <Hyperlink to='login' text='Login Now' />\r\n                </p>\r\n                <Formik\r\n                  initialValues={{\r\n                    firstName: '',\r\n                    lastName: '',\r\n                    email: '',\r\n                    password: '',\r\n                  }}\r\n                  onSubmit={(values) => signupValidation(values)}\r\n                  validationSchema={SignupSchema}\r\n                >\r\n                  {() => (\r\n                    <Form>\r\n                      {' '}\r\n                      {signupSuccess && (\r\n                        <FormSuccess text={signupSuccess} />\r\n                      )}{' '}\r\n                      {signupError && <FormError text={signupError} />}\r\n                      <Label text='First Name' />\r\n                      <FormInput\r\n                        ariaLabel='First Name'\r\n                        name='firstName'\r\n                        type='text'\r\n                        placeholder='First Name'\r\n                      />\r\n                      <Label text='Last Name' />\r\n                      <FormInput\r\n                        ariaLabel='Last Name'\r\n                        name='lastName'\r\n                        type='text'\r\n                        placeholder='Last Name'\r\n                      />\r\n                      <Label text='Email address' />\r\n                      <FormInput\r\n                        ariaLabel='Email address'\r\n                        name='email'\r\n                        type='email'\r\n                        placeholder='Email address'\r\n                      />\r\n                      <Label text='Password' />\r\n                      <FormInput\r\n                        ariaLabel='Password'\r\n                        name='password'\r\n                        type='password'\r\n                        placeholder='Password'\r\n                      />\r\n                      <GradientButton\r\n                        type='submit'\r\n                        text='Sign Up'\r\n                        loading={loading}\r\n                      />\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </div>\r\n              <div className='text-center small-font'>\r\n                <cite>\r\n                  By clicking Sign In, you agree to our <a href='/#'>Terms</a>{' '}\r\n                  and have read and acknowledge our{' '}\r\n                  <a href='/#'>US Privacy Statement</a>\r\n                </cite>\r\n              </div>\r\n            </div>\r\n            <div className='card-footer text-center'>\r\n              <div className='media  '>\r\n                <a href='/#' className=' m-auto small font'>\r\n                  I forgot my user ID or password\r\n                </a>\r\n              </div>\r\n              <p className='small-font text-center'>\r\n                New to Intuit?{' '}\r\n                <a href='/#' className=''>\r\n                  Create an account\r\n                </a>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <footer className='text-center extra-small-font mt-2'>\r\n          <div className='row'>\r\n            <div className='col-md-5 m-auto px-3'>\r\n              <div className='mb-2'>\r\n                <a href='/#' className=' mr-2 '>\r\n                  Legal\r\n                </a>\r\n                <a href='/#' className=' mr-2'>\r\n                  Privacy\r\n                </a>\r\n                <a href='/#'>Security</a>\r\n              </div>\r\n              <p>\r\n                © 2020 Grevity, Inc. All rights reserved. Grevity is a\r\n                registered trademarks of Grevity Inc. Terms and conditions,\r\n                features, support, pricing, and service options subject to\r\n                change without notice.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n}\r\nSignup.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  signupValidation: PropTypes.func.isRequired,\r\n  setAuthInfo: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  signupValidation,\r\n  isUserAuthenticated,\r\n  setAuthInfo,\r\n  isAdmin,\r\n})(Signup);\r\n","import React from 'react';\r\n\r\nfunction StyleScrollSpyItem({ id, href, className, name }) {\r\n  return (\r\n    <a className={`nav-link ${className}`} id={id} href={href}>\r\n      {name}\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default StyleScrollSpyItem;\r\n","import React from 'react';\r\nimport StyledScrollSpyItem from './../common/StyleScrollSpyItem';\r\nfunction ScrollSpyItem({ id, href, children, className, name }) {\r\n  return (\r\n    <StyledScrollSpyItem id={id} href={href} className={className} name={name}>\r\n      {children}\r\n    </StyledScrollSpyItem>\r\n  );\r\n}\r\n\r\nexport default ScrollSpyItem;\r\n","import React from 'react';\r\nimport grivety from '../../img/grivety.jpg';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport ScrollSpyItem from './../common/ScrollSpyItem';\r\nfunction HomeNavBar(props) {\r\n  return (\r\n    <nav className='fixed-top navbar-primary navbar navbar-dark navbar-expand-sm logo-background p-0'>\r\n      {' '}\r\n      <a href='/#'>\r\n        <img src={grivety} alt='' className='img-fluid grivety-small mb-0' />\r\n      </a>\r\n      <button\r\n        className='navbar-toggler'\r\n        data-toggle='collapse'\r\n        data-target='#collapseNavBarHome'\r\n      >\r\n        <span className='navbar-toggler-icon'></span>\r\n      </button>\r\n      <div className='collapse navbar-collapse' id='collapseNavbar'>\r\n        {/* hoping to set up scroll spy in future */}\r\n        {/* <ScrollSpy\r\n          items={[\r\n            'home-section',\r\n            'track-section',\r\n            'budget-section',\r\n            'summary-section',\r\n            'signup-section',\r\n          ]}\r\n        > */}\r\n        <ul className='navbar-nav mr-auto'>\r\n          <li className='nav-item'>\r\n            <ScrollSpyItem\r\n              href='#home-section'\r\n              id='goto-home-section'\r\n              name='Home'\r\n            />\r\n          </li>\r\n          <li className='nav-item'>\r\n            <ScrollSpyItem\r\n              href='#track-section'\r\n              id='goto-track-section'\r\n              name='Track'\r\n            />\r\n          </li>\r\n          <li className='nav-item'>\r\n            <ScrollSpyItem\r\n              href='#budget-section'\r\n              id='goto-budget-section'\r\n              name='Budget'\r\n            />\r\n          </li>\r\n          <li className='nav-item'>\r\n            <ScrollSpyItem\r\n              href='#summary-section'\r\n              id='goto-summary-section'\r\n              name='Summary'\r\n            />\r\n          </li>\r\n          <li className='nav-item'>\r\n            <ScrollSpyItem\r\n              href='#signup-section'\r\n              id='goto-signup-section'\r\n              name='Signup'\r\n            />\r\n          </li>\r\n        </ul>\r\n        <ul className='navbar-nav ml-auto'>\r\n          <li className='nav-item px-2'>\r\n            <Link className='nav-link ' to='/login'>\r\n              Login\r\n            </Link>\r\n          </li>\r\n          <Link className='nav-link' to='/signup'>\r\n            Signup\r\n          </Link>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default HomeNavBar;\r\n","import React from 'react';\r\n\r\nfunction HomeHeader(props) {\r\n  return (\r\n    <header id='home-section'>\r\n      <div className='dark-overlay'>\r\n        <div className='home-inner container'>\r\n          <div className='row'>\r\n            <div className='col-lg-8 text-white'>\r\n              <h1 className='display-4'>\r\n                Master\r\n                <strong> your finances </strong>\r\n                and manage your <strong>budgets</strong>\r\n              </h1>\r\n              <div className='d-none d-md-block'>\r\n                <div className='d-flex'>\r\n                  <div className='p-4 align-self-start'>\r\n                    <i className='fas fa-check fa-2x'></i>\r\n                  </div>\r\n                  <div className='p4 align-self-end'>\r\n                    Lorem, ipsum dolor sit amet consectetur adipisicing elit.\r\n                    Eaque ducimus, laboriosam illo cumque dolorum aspernatur\r\n                    doloribus voluptatem voluptate, magni illum dignissimos odio\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='d-flex'>\r\n                  <div className='p-4 align-self-start'>\r\n                    <i className='fas fa-check fa-2x'></i>\r\n                  </div>\r\n                  <div className='p4 align-self-end'>\r\n                    Lorem, ipsum dolor sit amet consectetur adipisicing elit.\r\n                    Eaque ducimus, laboriosam illo cumque dolorum aspernatur\r\n                    doloribus voluptatem voluptate, magni illum dignissimos odio\r\n                  </div>\r\n                </div>\r\n                <div className='d-flex'>\r\n                  <div className='p-4 align-self-start'>\r\n                    <i className='fas fa-check fa-2x'></i>\r\n                  </div>\r\n                  <div className='p4 align-self-end'>\r\n                    Lorem, ipsum dolor sit amet consectetur adipisicing elit.\r\n                    Eaque ducimus, laboriosam illo cumque dolorum aspernatur\r\n                    doloribus voluptatem voluptate, magni illum dignissimos odio\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default HomeHeader;\r\n","import React from 'react';\r\nimport budgetImage from '../../img/Budgeting Methods_Banner.png';\r\n\r\nfunction BudgetSection(props) {\r\n  return (\r\n    <div id='budget-section' className='logo-background pt-5'>\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <div className='col-md-6'>\r\n            <img\r\n              src={budgetImage}\r\n              className='img-fluid my-3 rounded-circle'\r\n              alt=''\r\n            />\r\n          </div>\r\n          <div className='col-md-6'>\r\n            <h3>Manage Budgets</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Neque ut\r\n              ad asperiores optio animi quidem.\r\n            </p>\r\n            <div className='d-flex'>\r\n              <div className='p-3 align-self-start'>\r\n                <div className='fas fa-check fa-2x'></div>\r\n              </div>\r\n              <div className='p-3 self-align-end'>\r\n                <div className=''>\r\n                  Lorem ipsum dolor sit, amet consectetur adipisicing elit.\r\n                  Minima optio adipisci nam iste, libero tempore.\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='d-flex'>\r\n              <div className='p-3 self-align-start'>\r\n                <div className='fas fa-check fa-2x'></div>\r\n              </div>\r\n              <div className='p-3 self-align-end'>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                Consequatur hic quisquam illo consequuntur tenetur quae.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BudgetSection;\r\n","import React from 'react';\r\n\r\nfunction TrackSection(props) {\r\n  return (\r\n    <section id='track-section'>\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <div className='col text-center py-5  shadow-lg'>\r\n            <h1 className='display-4'>Track</h1>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Qui\r\n              veritatis commodi voluptate reprehenderit voluptatibus veniam.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default TrackSection;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Signup from '../../img/Saving-Budget-Piggy.gif';\r\nfunction SignupSection(props) {\r\n  const [isHoveredSignup, setIsHoveredSignup] = useState(false);\r\n  const [isHoveredLogin, setIsHoveredLogin] = useState(false);\r\n  return (\r\n    <section id='signup-section' style={{ backgroundColor: '#00a6a4' }}>\r\n      <div className='container'>\r\n        <div className='row '>\r\n          <div className='col-md-6 py-5  d-flex align-self-center '>\r\n            <div className='card bg-white  shadow-lg rounded-top text-center'>\r\n              <div className='card-header'>\r\n                <h3>Get Started Today!</h3>\r\n              </div>\r\n              <div className='card-body '>\r\n                <p>\r\n                  Take the leap and get started on mastering your finances\r\n                  today!\r\n                </p>\r\n                <div className='d-flex justify-content-center'>\r\n                  <Link to='/signup'>\r\n                    <button\r\n                      onMouseEnter={() => setIsHoveredSignup(true)}\r\n                      onMouseLeave={() => setIsHoveredSignup(false)}\r\n                      className='btn m-3 p-2 '\r\n                      style={{\r\n                        backgroundColor: isHoveredSignup ? 'white' : '#ff9331',\r\n                        borderColor: isHoveredSignup ? '#ff9331' : 'white',\r\n                      }}\r\n                    >\r\n                      <i className='fas fa-lock pr-2'></i>\r\n                      Signup\r\n                    </button>\r\n                  </Link>\r\n                  <Link to='/login'>\r\n                    <button\r\n                      onMouseEnter={() => setIsHoveredLogin(true)}\r\n                      onMouseLeave={() => setIsHoveredLogin(false)}\r\n                      className='btn m-3 p-2'\r\n                      style={{\r\n                        backgroundColor: isHoveredLogin ? '#00a6a4' : 'white',\r\n                        borderColor: isHoveredLogin ? 'white' : '#00a6a4',\r\n                      }}\r\n                    >\r\n                      <i className='fas fa-lock pr-2'></i>\r\n                      Login\r\n                    </button>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='col-md-6 ml-auto py-5 d-flex justify-content-center'>\r\n            <img\r\n              src={Signup}\r\n              alt=''\r\n              style={{ width: '75%' }}\r\n              className='img-fluid rounded-circle shadow-lg  '\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default SignupSection;\r\n","import React from 'react';\r\n\r\nfunction AnalyzeSection(props) {\r\n  return (\r\n    <section id='summary-section' className='py-5'>\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <div className='col-md-4'>\r\n            <div className='card home-cards text-center shadow-lg p-4 h-100'>\r\n              <div className='card-header h-50'>\r\n                <i className='fas fa-funnel-dollar fa-2x pb-3'></i>\r\n                <h5>All Your Finances Together</h5>\r\n              </div>\r\n              <div className='card-body'>\r\n                <p>\r\n                  Lorem ipsum dolor sit amet consectetur adipisicing elit. Unde,\r\n                  et?\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='col-md-4'>\r\n            <div className='card home-cards text-center shadow-lg p-4 h-100'>\r\n              <div className='card-header h-50'>\r\n                <i className='fas fa-wallet fa-2x pb-3'></i>\r\n                <h5>Monitor All Expenses</h5>\r\n              </div>\r\n              <div className='card-body'>\r\n                <p>\r\n                  Lorem, ipsum dolor sit amet consectetur adipisicing elit.\r\n                  Suscipit, id!\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='col-md-4'>\r\n            {' '}\r\n            <div className='card home-cards text-center shadow-lg p-4 h-100'>\r\n              <div className='card-header h-50'>\r\n                <i className='fas fa-piggy-bank fa-2x pb-3'></i>\r\n                <h5>Budget Everything</h5>\r\n              </div>\r\n              <div className='card-body'>\r\n                <p>\r\n                  Lorem, ipsum dolor sit amet consectetur adipisicing elit.\r\n                  Suscipit, id!\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AnalyzeSection;\r\n","import React, { useEffect } from 'react';\r\nimport { isUserAuthenticated, setAuthInfo } from '../actions/authActions';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport HomeNavBar from '../components/Home/HomeNavBar';\r\nimport HomeHeader from './../components/Home/HomeHeader';\r\nimport BudgetSection from '../components/Home/BudgetSection';\r\nimport TrackSection from './../components/Home/TrackSection';\r\nimport SignupSection from './../components/Home/SignupSection';\r\nimport AnalyzeSection from '../components/Home/AnalyzeSection';\r\nfunction Home({\r\n  auth: { isAuthenticated, expiresAt },\r\n  isUserAuthenticated,\r\n  setAuthInfo,\r\n}) {\r\n  useEffect(() => {\r\n    isUserAuthenticated();\r\n    setAuthInfo();\r\n    //eslint-disable-next-line\r\n  }, [expiresAt]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isAuthenticated && <Redirect to='/budgets' />}\r\n      <div className='logo-background'>\r\n        <HomeNavBar />\r\n        <HomeHeader />\r\n      </div>\r\n      <TrackSection />\r\n      <BudgetSection />\r\n      <AnalyzeSection />\r\n      <SignupSection />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  isUserAuthenticated,\r\n  setAuthInfo,\r\n})(Home);\r\n","import React from 'react';\r\n// import NavBarSecondary from './components/common/NavBarSecondary';\r\nimport NavbarTop from './components/common/NavbarTop';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nfunction AuthenticatedNavBar({ auth: { isAuthenticated } }) {\r\n  return (\r\n    <div>\r\n      {isAuthenticated === false && <Redirect to='/' />}\r\n      {isAuthenticated && (\r\n        <>\r\n          <NavbarTop />\r\n          {/* <NavBarSecondary /> */}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps)(AuthenticatedNavBar);\r\n","import React, { useEffect } from 'react';\r\nimport { Form, Formik } from 'formik';\r\nimport { connect } from 'react-redux';\r\nimport { addTransaction } from '../actions/transactionActions';\r\nimport Label from './../components/common/Label';\r\n\r\nimport {\r\n  isUserAuthenticated,\r\n  setAuthInfo,\r\n  isAdmin,\r\n} from '../actions/authActions';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport GradientButton from '../components/common/GradientButton';\r\nimport FormInput from '../components/common/FormInput';\r\nimport NavbarTop from './../components/common/NavbarTop';\r\nimport NavBarSecondary from './../components/common/NavBarSecondary';\r\n\r\nconst TransactionSchema = Yup.object().shape({\r\n  description: Yup.string().required('Transaction Name is required'),\r\n});\r\n\r\nfunction AddTransaction({\r\n  auth: { isAuthenticated, loading },\r\n  isUserAuthenticated,\r\n  setAuthInfo,\r\n  addTransaction,\r\n  isAdmin,\r\n}) {\r\n  useEffect(() => {\r\n    isUserAuthenticated();\r\n    return () => {\r\n      setAuthInfo();\r\n      isAdmin();\r\n    };\r\n    //eslint-disable-next-line\r\n  }, [addTransaction]);\r\n  return (\r\n    <React.Fragment>\r\n      {!isAuthenticated && <Redirect to='/' />}\r\n      <NavbarTop />\r\n      <NavBarSecondary />\r\n\r\n      <Formik\r\n        initialValues={{\r\n          accountName: '',\r\n          description: '',\r\n          category: '',\r\n          subCategory: '',\r\n          amount: '',\r\n        }}\r\n        onSubmit={(values) => addTransaction(values)}\r\n        validationSchema={TransactionSchema}\r\n      >\r\n        {() => (\r\n          <Form>\r\n            <Label text='Description' />\r\n            <FormInput\r\n              ariaLabel='Description'\r\n              name='description'\r\n              type='text'\r\n              placeholder='Description'\r\n            />\r\n            <Label text='category' />\r\n            <FormInput\r\n              ariaLabel='category'\r\n              name='category'\r\n              type='text'\r\n              placeholder='category'\r\n            />{' '}\r\n            <Label text='subCategory' />\r\n            <FormInput\r\n              ariaLabel='subCategory'\r\n              name='subCategory'\r\n              defaultValue=''\r\n              type='text'\r\n              placeholder='subCategory'\r\n            />{' '}\r\n            <Label text='accountName' />\r\n            <FormInput\r\n              ariaLabel='accountName'\r\n              name='accountName'\r\n              type='text'\r\n              placeholder='accountName'\r\n            />{' '}\r\n            <Label text='amount' />\r\n            <FormInput\r\n              ariaLabel='amount'\r\n              name='amount'\r\n              type='text'\r\n              placeholder='amount'\r\n            />\r\n            <GradientButton\r\n              type='submit'\r\n              text='Add Transaction'\r\n              loading={loading}\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </React.Fragment>\r\n  );\r\n}\r\nAddTransaction.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  setAuthInfo: PropTypes.func.isRequired,\r\n  addTransaction: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  addTransaction,\r\n  isUserAuthenticated,\r\n  setAuthInfo,\r\n  isAdmin,\r\n})(AddTransaction);\r\n","import React, { lazy, Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n//redux\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n//context\nimport { FetchProvider } from './context/fetchContext';\n\n//pages\nimport Login from './pages/Login';\nimport AuthenticatedRoutes from './AuthenticatedRoutes';\n// import AdminRoutes from './AdminRoutes';\nimport Signup from './pages/Signup';\nimport Home from './pages/Home';\nimport AppShell from './AppShell';\nimport AuthenticatedNavBar from './AuthenticatedNavBar';\nimport AddTransaction from './pages/AddTransaction';\nconst Overview = lazy(() => import('./pages/Overview'));\nconst Transactions = lazy(() => import('./pages/Transactions'));\nconst AddAccount = lazy(() => import('./pages/AddAccount'));\nconst Trends = lazy(() => import('./pages/Trends'));\nconst Goals = lazy(() => import('./pages/Goals'));\nconst WaysToSave = lazy(() => import('./pages/WaysToSave'));\nconst Budgets = lazy(() => import('./pages/Budgets.js'));\nconst Settings = lazy(() => import('./pages/Settings.js'));\nconst Profile = lazy(() => import('./pages/Profile.js'));\n\nconst LoadingFallback = () => (\n  <AppShell>\n    <div className='p-4'>Loading...</div>\n  </AppShell>\n);\nconst UnauthenticatedRoutes = () => (\n  <Switch>\n    <Route exact path='/login'>\n      <Login />\n    </Route>\n    <Route exact path='/signup'>\n      <Signup />\n    </Route>\n    <Route exact path='/'>\n      <Home />\n    </Route>\n  </Switch>\n);\n\nconst AppRoutes = () => (\n  <React.Fragment>\n    <AuthenticatedNavBar />\n    <Suspense fallback={<LoadingFallback />}>\n      <Switch>\n        <AuthenticatedRoutes path='/overview'>\n          <Overview />\n        </AuthenticatedRoutes>\n        <AuthenticatedRoutes path='/transactions'>\n          <Transactions />\n        </AuthenticatedRoutes>\n        <AuthenticatedRoutes path='/goals'>\n          <Goals />\n        </AuthenticatedRoutes>\n        <AuthenticatedRoutes path='/addTransactions'>\n          <AddTransaction />\n        </AuthenticatedRoutes>\n        <AuthenticatedRoutes path='/budgets'>\n          <Budgets />\n        </AuthenticatedRoutes>\n        <AuthenticatedRoutes path='/trends'>\n          <Trends />\n        </AuthenticatedRoutes>\n        <AuthenticatedRoutes path='/waystosave'>\n          <WaysToSave />\n        </AuthenticatedRoutes>\n        <AuthenticatedRoutes path='/accounts'>\n          <AddAccount />\n        </AuthenticatedRoutes>\n        <AuthenticatedRoutes path='/settings'>\n          <Settings />\n        </AuthenticatedRoutes>\n        <AuthenticatedRoutes path='/profile'>\n          <Profile />\n        </AuthenticatedRoutes>\n        <AuthenticatedRoutes path='/tour'>\n          <Profile />\n        </AuthenticatedRoutes>\n\n        <UnauthenticatedRoutes />\n      </Switch>\n    </Suspense>\n  </React.Fragment>\n);\n\nfunction App() {\n  return (\n    <Router>\n      <Provider store={store}>\n        <FetchProvider>\n          <AppRoutes />\n        </FetchProvider>\n      </Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './App.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import React from 'react';\r\nimport { useField } from 'formik';\r\nimport FormError from './FormError';\r\n\r\nconst FormInput = ({ ariaLabel, name, type, placeholder }) => {\r\n  const [field, meta] = useField(name);\r\n  return (\r\n    <>\r\n      <input\r\n        {...field}\r\n        className='form-control border-primary'\r\n        aria-label={ariaLabel}\r\n        name={name}\r\n        type={type}\r\n        placeholder={placeholder}\r\n      />\r\n\r\n      {meta.touched && meta.error ? (\r\n        <FormError text={meta.error}></FormError>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","//filtering accounts card on overview\r\nexport const FILTER_ACCOUNT_TYPES = 'FILTER_ACCOUNT_TYPES';\r\nexport const ADD_ACCOUNT = 'ADD_ACCOUNT';\r\nexport const GET_ACCOUNTS = 'GET_ACCOUNTS';\r\n\r\nexport const ACCOUNT_ERROR = 'ACCOUNT_ERROR';\r\nexport const TRANSACTION_ERROR = 'TRANSACTION_ERROR';\r\nexport const MONTH_ERROR = 'MONTH_ERROR';\r\n\r\nexport const SET_ACCOUNT_LOADING = 'SET_ACCOUNT_LOADING';\r\nexport const SET_TRANSACTION_LOADING = 'SET_TRANSACTION_LOADING';\r\n//calculating net totals\r\nexport const SET_CASH = 'SET_CASH';\r\nexport const SET_DEBT = 'SET_DEBT';\r\nexport const SET_TOTAL = 'SET_TOTAL';\r\n\r\n//getting month to filter transactions/totals by\r\nexport const SET_HOVERED_MONTH = 'SET_HOVERED_MONTH';\r\nexport const SET_HOVERED_BUDGET_MONTH = 'SET_HOVERED_BUDGET_MONTH';\r\nexport const SET_MONTH = 'SET_MONTH';\r\n\r\nexport const FILTER = 'FILTER';\r\n//setting bars on overview page\r\nexport const SET_CASH_PERCENTAGE_BAR = 'SET_CASH_PERCENTAGE_BAR';\r\nexport const SET_DEBT_PERCENTAGE_BAR = 'SET_DEBT_PERCENTAGE_BAR';\r\nexport const SET_NET_PERCENTAGE_BAR = 'SET_TOTAL_PERCENTAGE_BAR';\r\n\r\n//setting monthly totals and percentages\r\nexport const SET_MONTH_NET_PERCENT = 'SET_MONTH_TOTAL_PERCENT;';\r\n\r\n//used to calculate the net total\r\nexport const SET_MONTH_NET = 'SET_MONTH_NET';\r\n\r\n//sets net total for the past 6 months\r\n\r\nexport const SET_6_MONTH_NET = 'SET_6_MONTH_NET';\r\n\r\n//used to determine max number in month net graph in overview,\r\n//all other bars are relative to max net for past 6 months\r\nexport const SET_6_MONTH_MAX = 'SET_6_MONTH_MAX';\r\n\r\n//setting the hovered month net for the budgets page\r\nexport const SET_HOVERED_MONTH_NET = 'SET_HOVERED_MONTH_NET';\r\n\r\n//sets monthly debt, income and net difference\r\n//all actions compiled together as they cannot work on same transactions array at the same time\r\n//in different actions\r\nexport const SET_MONTH_TOTALS = 'SET_MONTH_TOTALS';\r\n\r\n//setting color on hover for budget page months\r\nexport const SET_HOVERED_MONTH_COLOR = 'SET_HOVERED_MONTH_COLOR';\r\n\r\n//transactions http requests\r\nexport const ADD_TRANSACTION = 'ADD_TRANSACTION';\r\nexport const GET_TRANSACTIONS = 'GET_TRANSACTIONS';\r\nexport const UPDATE_TRANSACTION = 'UPDATE_TRANSACTION';\r\n\r\n//getting the toal amount of a category value for budget page\r\nexport const GET_TRANSACTION_CATEGORY_TOTALS =\r\n  'GET_TRANSACTION_CATEGORY_TOTALS';\r\n\r\n//filtering transactions for a certain category\r\nexport const GET_TRANSACTIONS_BY_CATEGORY = 'GET_TRANSACTIONS_BY_CATEGORY';\r\n\r\n//getting all the transaction categories to map into the budget page\r\nexport const GET_TRANSACTION_CATEGORIES = 'GET_TRANSACTION_CATEGORIES';\r\n\r\n//filtering for transactions in one month\r\nexport const GET_TRANSACTIONS_BY_MONTH = 'GET_TRANSACTIONS_BY_MONTH';\r\n\r\n//ensures when transactions page is left, transaction re rendering is allowed\r\n//again for getTransactions\r\n//so that when returning to transactiosn page, transctions are reloaded\r\nexport const ALLOW_TRANSACTION_RE_RENDER = 'ALLOW_TRANSACTION_RE_RENDER';\r\n\r\n//ensures when a transaction/transaction cateogry is clicked\r\n//in budgets page, getTransactions does not run\r\nexport const PREVENT_TRANSACTION_RE_RENDER = 'PREVENT_TRANSACTION_RE_RENDER';\r\n\r\n//filtering transactions when clicking on the other category\r\n//WILL ALSO DISABLE TRANSACTION RE-RENDERING, SO ALL TRANSACTIONS\r\n//ARENT LOADED WHEN REDIRECT TO TRANSACTION PAGE\r\n//TRANSACTION RE RENDERING IS ENABLED ON UNMOUNTING IN TRANSACTION PAGE\r\nexport const SET_TRANSACTION_LIST_NO_BUDGET = 'SET_TRANSACTION_LIST_NO_BUDGET';\r\n\r\nexport const SET_TRANSACTION_LIST_BY_CATEGORY =\r\n  'SET_TRANSACTION_LIST_BY_CATEGORY';\r\n\r\n//THIS SETS THE TRANSACTION LIST WHEN YOU CLICK ON AN\r\n//ACCOUNT IN THE OVERVIEW PAGE, ACCOUNTS\r\nexport const SET_TRANSACTION_LIST_BY_ACCOUNT =\r\n  'SET_TRANSACTION_LIST_BY_ACCOUNT';\r\n\r\nexport const GET_TRANSACTIONS_BY_ACCOUNT = 'GET_TRANSACTIONS_BY_ACCOUNT';\r\nexport const GET_TRANSACTIONS_BY_ACCOUNT_CATEGORY =\r\n  '  GET_TRANSACTIONS_BY_ACCOUNT_CATEGORY';\r\n//setting transaction that is clicked on\r\nexport const SET_SELECTED_TRANSACTION = '  SET_SELECTED_TRANSACTION';\r\n\r\n//sum for total non budgeted income and spending below budget bars in budget page\r\nexport const GET_NON_BUDGETED_INCOME_SUM = 'GET_NON_BUDGETED_INCOME_SUM';\r\nexport const GET_NON_BUDGETED_SPENDING_SUM = 'GET_NON_BUDGETED_SPENDING_SUM';\r\n\r\n//total spending of categories that are budgeted\r\nexport const GET_SPENDING_SUM_BY_MONTH_TYPE = 'GET_SPENDING_SUM_BY_MONTH_TYPE';\r\nexport const GET_INCOME_SUM_BY_MONTH_TYPE = 'GET_INCOME_SUM_BY_MONTH_TYPE';\r\nexport const GET_TRANSFER_SUM_BY_MONTH_TYPE = 'GET_TRANSFER_SUM_BY_MONTH_TYPE';\r\n\r\n//extra transactions that do not have a budget\r\nexport const GET_NON_BUDGETED_INCOME_TRANSACTIONS =\r\n  'GET_NON_BUDGETED_INCOME_TRANSACTIONS';\r\nexport const GET_NON_BUDGETED_SPENDING_TRANSACTIONS =\r\n  'GET_NON_BUDGETED_SPENDING_TRANSACTIONS';\r\nexport const GET_NON_BUDGETED_TRANSFER_TRANSACTIONS =\r\n  'GET_NON_BUDGETED_TRANSFER_TRANSACTIONS';\r\n//authentication actions\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_ERROR = 'SIGNUP_ERROR';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const REDIRECT_ON_LOGIN = 'REDIRECT_ON_LOGIN';\r\nexport const IS_AUTHENTICATED = 'IS_AUTHENTICATED';\r\nexport const IS_ADMIN = 'IS_ADMIN';\r\nexport const LOADING = 'LOADING';\r\n\r\n//adding a budget\r\n\r\nexport const ADD_BUDGET = 'ADD_BUDGET';\r\nexport const GET_BUDGETS = 'GET_BUDGETS';\r\nexport const UPDATE_BUDGET = 'UPDATE_BUDGET';\r\nexport const DELETE_BUDGET = 'DELETE_BUDGET';\r\nexport const INCREMENT_BUDGET = 'INCREMENT_BUDGET';\r\nexport const DECREMENT_BUDGET = 'DECREMENT_BUDGET';\r\n\r\n//sets income sum and spending sum for budget page\r\nexport const BUDGET_INCOME_SUM = 'BUDGET_INCOME_SUM';\r\nexport const BUDGET_SPENDING_SUM = 'BUDGET_SPENDING_SUM';\r\n\r\nexport const ADD_BUDGET_CATEGORY = 'ADD_BUDGET_CATEGORY';\r\nexport const GET_BUDGETS_CATEGORY = 'GET_BUDGETS_CATEGORY';\r\nexport const UPDATE_BUDGET_CATEGORY = 'UPDATE_BUDGET_CATEGORY';\r\nexport const DELETE_BUDGET_CATEGORY = 'DELETE_BUDGET_CATEGORY';\r\nexport const GET_BUDGET_SUBCATEGORIES = 'GET_BUDGET_SUBCATEGORIES';\r\n\r\n//setting state so that in the left transaction column, only 1 item can\r\n//be highlighted on click\r\nexport const SET_CLICK = 'SET_CLICK';\r\n","import React from 'react';\r\n\r\nconst Label = ({ text }) => <label className=''>{text}</label>;\r\n\r\nexport default Label;\r\n","module.exports = __webpack_public_path__ + \"static/media/grivety.d4856dfc.jpg\";","import React from 'react';\r\n\r\nconst GradientButton = ({ type, text, size, loading, onClick }) => {\r\n  return (\r\n    <button type={type} className='btn btn-primary my-2 py-1' onClick={onClick}>\r\n      {loading ? (\r\n        <span className=''>\r\n          Loading icon\r\n          <span className=''>Loading...</span>\r\n        </span>\r\n      ) : (\r\n        <span>{text}</span>\r\n      )}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default GradientButton;\r\n","import React from 'react';\r\n\r\nconst FormError = ({ text }) => (\r\n  <section>\r\n    <p className=''>{text}</p>\r\n  </section>\r\n);\r\n\r\nexport default FormError;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../../img/grivety.jpg';\r\nimport { logout } from '../../actions/authActions';\r\nimport { connect } from 'react-redux';\r\nfunction NavbarTop({ logout }) {\r\n  return (\r\n    <nav className='navbar navbar-primary navbar-dark navbar-expand-sm logo-background p-0 px-5 mb-5'>\r\n      <a href='/#' className='navbar-brand'>\r\n        <img\r\n          src={logo}\r\n          style={{ width: '70px' }}\r\n          alt=''\r\n          className='img-fluid'\r\n        />\r\n      </a>\r\n      <button\r\n        className='navbar-toggler'\r\n        data-toggle='collapse'\r\n        data-target='#navbarCollapse'\r\n      >\r\n        <span className='navbar-toggler-icon'></span>\r\n      </button>\r\n      <div\r\n        className='collapse navbar-collapse small-medium-font mx-5  d-flex justify-content-between'\r\n        id='navbarCollapse'\r\n      >\r\n        <ul className='navbar-nav'>\r\n          <li className='nav-item'>\r\n            <Link to='/overview' className='nav-link'>\r\n              OVERVIEW\r\n            </Link>\r\n          </li>\r\n\r\n          <li className='nav-item '>\r\n            <Link to='/transactions' className='nav-link'>\r\n              TRANSACTIONS\r\n            </Link>\r\n          </li>\r\n\r\n          <li className='nav-item '>\r\n            <Link to='/budgets' className='nav-link'>\r\n              BUDGETS{' '}\r\n            </Link>\r\n          </li>\r\n\r\n          <li className='nav-item'>\r\n            <a className='nav-link' href='/#' onClick={logout}>\r\n              LOGOUT\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        {/* <ul className='navbar-nav '>\r\n          <li className='nav-item ringing-bell'>\r\n            <a href='contact.html' className='nav-link'>\r\n              <i className='far fa-bell fa-2x faa-ring animated-hover'></i>\r\n            </a>\r\n          </li>\r\n        </ul> */}\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default connect(null, { logout })(NavbarTop);\r\n","import {\r\n  ADD_TRANSACTION,\r\n  GET_TRANSACTIONS,\r\n  UPDATE_TRANSACTION,\r\n  PREVENT_TRANSACTION_RE_RENDER,\r\n  SET_TRANSACTION_LOADING,\r\n  SET_MONTH_NET,\r\n  TRANSACTION_ERROR,\r\n  GET_NON_BUDGETED_INCOME_SUM,\r\n  GET_TRANSACTIONS_BY_ACCOUNT_CATEGORY,\r\n  GET_NON_BUDGETED_SPENDING_SUM,\r\n  SET_HOVERED_MONTH_COLOR,\r\n  GET_INCOME_SUM_BY_MONTH_TYPE,\r\n  GET_SPENDING_SUM_BY_MONTH_TYPE,\r\n  GET_TRANSACTIONS_BY_MONTH,\r\n  SET_TRANSACTION_LIST_NO_BUDGET,\r\n  GET_TRANSACTION_CATEGORIES,\r\n  GET_TRANSACTIONS_BY_ACCOUNT,\r\n  GET_NON_BUDGETED_SPENDING_TRANSACTIONS,\r\n  GET_NON_BUDGETED_INCOME_TRANSACTIONS,\r\n  SET_6_MONTH_NET,\r\n  GET_TRANSACTIONS_BY_CATEGORY,\r\n  GET_TRANSACTION_CATEGORY_TOTALS,\r\n  SET_SELECTED_TRANSACTION,\r\n  SET_MONTH_TOTALS,\r\n  SET_6_MONTH_MAX,\r\n  SET_MONTH_NET_PERCENT,\r\n  ALLOW_TRANSACTION_RE_RENDER,\r\n  SET_TRANSACTION_LIST_BY_CATEGORY,\r\n  SET_TRANSACTION_LIST_BY_ACCOUNT,\r\n} from '../actions/types';\r\nimport { authAxios } from '../utils/authFetch';\r\n\r\nexport const setTransactionListByAccount = (account) => async (dispatch) => {\r\n  try {\r\n    const { data } = await authAxios.get(\r\n      `/transactions/account/${account._id}`\r\n    );\r\n\r\n    dispatch({ type: SET_TRANSACTION_LIST_BY_ACCOUNT, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TRANSACTION_ERROR,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\nexport const getTransactions = () => async (dispatch) => {\r\n  try {\r\n    setTransactionLoading();\r\n    const { data } = await authAxios.get('/transactions');\r\n    dispatch({ type: GET_TRANSACTIONS, payload: data });\r\n  } catch (error) {\r\n    setTransactionLoading();\r\n\r\n    dispatch({\r\n      type: TRANSACTION_ERROR,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\n//this is used for changing the state and allowing transactions to re render\r\n//when selecting a specific budget item or budget category\r\n//to show those transactions, getTransactions cannot re render\r\nexport const allowTransactionReRender = () => {\r\n  return {\r\n    type: ALLOW_TRANSACTION_RE_RENDER,\r\n  };\r\n};\r\nexport const setTransactionList = (transactions, month) => {\r\n  return {\r\n    type: SET_TRANSACTION_LIST_NO_BUDGET,\r\n    payload: { transactions, month },\r\n  };\r\n};\r\n\r\nexport const preventTransactionReRendering = () => {\r\n  return {\r\n    type: PREVENT_TRANSACTION_RE_RENDER,\r\n  };\r\n};\r\nexport const setTransactionListByCategory = (transactions, month) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const { data } = await authAxios.get(\r\n      `/transactions/monthAndCategory/${transactions.category}/${month}`\r\n    );\r\n\r\n    dispatch({ type: SET_TRANSACTION_LIST_BY_CATEGORY, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TRANSACTION_ERROR,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\nexport const setSelectedTransaction = (transaction) => {\r\n  return {\r\n    type: SET_SELECTED_TRANSACTION,\r\n    payload: transaction,\r\n  };\r\n};\r\n\r\nexport const getMonthTypeSum = (month, type, budgetList) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    setTransactionLoading();\r\n    const { data } = await authAxios.get(\r\n      `/transactions/monthAndType/${month}/${type}`\r\n    );\r\n    type === 'Withdrawal'\r\n      ? // need budget list for spending sum to only sum transactions that are\r\n        //under a created budget category\r\n        dispatch({\r\n          type: GET_SPENDING_SUM_BY_MONTH_TYPE,\r\n          payload: { data, budgetList },\r\n        })\r\n      : dispatch({\r\n          type: GET_INCOME_SUM_BY_MONTH_TYPE,\r\n          payload: { data, budgetList },\r\n        });\r\n  } catch (error) {\r\n    setTransactionLoading();\r\n    dispatch({\r\n      type: TRANSACTION_ERROR,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\n//list of all transactions that have not been budgeted for budgets page\r\nexport const getNonBudgetedTransactions = (month, type, budgetList) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    setTransactionLoading();\r\n    const { data } = await authAxios.get(\r\n      `/transactions/monthAndType/${month}/${type}`\r\n    );\r\n\r\n    type === 'Deposit'\r\n      ? dispatch({\r\n          type: GET_NON_BUDGETED_INCOME_TRANSACTIONS,\r\n          payload: { data, budgetList },\r\n        })\r\n      : dispatch({\r\n          type: GET_NON_BUDGETED_SPENDING_TRANSACTIONS,\r\n          payload: { data, budgetList },\r\n        });\r\n  } catch (error) {\r\n    setTransactionLoading();\r\n\r\n    dispatch({\r\n      type: TRANSACTION_ERROR,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\n//updateTransaction\r\n\r\n//sum of all transactions that have not been budgeted\r\nexport const getNonBudgetedTransactionsSum = (\r\n  month,\r\n  type,\r\n  budgetList\r\n) => async (dispatch) => {\r\n  try {\r\n    setTransactionLoading();\r\n    const { data } = await authAxios.get(\r\n      `/transactions/monthAndType/${month}/${type}`\r\n    );\r\n    type === 'Deposit'\r\n      ? dispatch({\r\n          type: GET_NON_BUDGETED_INCOME_SUM,\r\n          payload: { data, budgetList },\r\n        })\r\n      : dispatch({\r\n          type: GET_NON_BUDGETED_SPENDING_SUM,\r\n          payload: { data, budgetList },\r\n        });\r\n  } catch (error) {\r\n    setTransactionLoading();\r\n\r\n    dispatch({\r\n      type: TRANSACTION_ERROR,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nconst setTransactionLoading = () => {\r\n  return {\r\n    type: SET_TRANSACTION_LOADING,\r\n  };\r\n};\r\nexport const setHoveredMonthColor = (month) => async (dispatch) => {\r\n  try {\r\n    setTransactionLoading();\r\n    if (month !== '') {\r\n      const { data } = await authAxios.get(`/transactions/month/${month}`);\r\n      dispatch({ type: SET_HOVERED_MONTH_COLOR, payload: data });\r\n    } else {\r\n      dispatch({ type: SET_HOVERED_MONTH_COLOR, payload: '' });\r\n    }\r\n  } catch (error) {\r\n    setTransactionLoading();\r\n    dispatch({\r\n      type: TRANSACTION_ERROR,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addTransaction = (transaction) => async (dispatch) => {\r\n  try {\r\n    setTransactionLoading();\r\n    const { data } = await authAxios.post('/transactions', transaction);\r\n    dispatch({\r\n      type: ADD_TRANSACTION,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    setTransactionLoading();\r\n\r\n    dispatch({\r\n      type: TRANSACTION_ERROR,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateTransaction = (transaction) => async (dispatch) => {\r\n  try {\r\n    setTransactionLoading();\r\n    const { data } = await authAxios.put(\r\n      `transactions/updateTransaction/${transaction._id}`,\r\n      transaction\r\n    );\r\n    dispatch({\r\n      type: UPDATE_TRANSACTION,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    setTransactionLoading();\r\n\r\n    dispatch({\r\n      type: TRANSACTION_ERROR,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getMonthsTransactions = (month) => async (dispatch) => {\r\n  try {\r\n    setTransactionLoading();\r\n    const { data } = await authAxios.get(`/transactions/month/${month}`);\r\n\r\n    dispatch({ type: GET_TRANSACTIONS_BY_MONTH, payload: data });\r\n  } catch (error) {\r\n    setTransactionLoading();\r\n\r\n    dispatch({\r\n      type: TRANSACTION_ERROR,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\nexport const getCategoryTransactions = (category) => async (dispatch) => {\r\n  try {\r\n    setTransactionLoading();\r\n    const { data } = await authAxios.get(`/transactions/category/${category}`);\r\n\r\n    dispatch({ type: GET_TRANSACTIONS_BY_CATEGORY, payload: data });\r\n  } catch (error) {\r\n    setTransactionLoading();\r\n\r\n    dispatch({\r\n      type: TRANSACTION_ERROR,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getAccountTransactions = (account) => async (dispatch) => {\r\n  try {\r\n    setTransactionLoading();\r\n    const { data } = await authAxios.get(\r\n      `/transactions/account/${account._id}`\r\n    );\r\n    console.log(data);\r\n    dispatch({ type: GET_TRANSACTIONS_BY_ACCOUNT, payload: data });\r\n  } catch (error) {\r\n    setTransactionLoading();\r\n\r\n    dispatch({\r\n      type: TRANSACTION_ERROR,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\n//filtering transactions by Cash, Credit etc.\r\nexport const getTransactionsByAccountCategory = (accountCategory) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    setTransactionLoading();\r\n    const { data } = await authAxios.get(\r\n      `/transactions/accountCategory/${accountCategory}`\r\n    );\r\n    dispatch({ type: GET_TRANSACTIONS_BY_ACCOUNT_CATEGORY, payload: data });\r\n  } catch (error) {\r\n    setTransactionLoading();\r\n\r\n    dispatch({\r\n      type: TRANSACTION_ERROR,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getTransactionCategories = () => {\r\n  return {\r\n    type: GET_TRANSACTION_CATEGORIES,\r\n  };\r\n};\r\n\r\nexport const getTransactionTotalByCategory = (budgets) => {\r\n  return {\r\n    type: GET_TRANSACTION_CATEGORY_TOTALS,\r\n    payload: budgets,\r\n  };\r\n};\r\n\r\nexport const setMonthNet = (month) => async (dispatch) => {\r\n  try {\r\n    const { data } = await authAxios.get(`/transactions/month/${month}`);\r\n\r\n    dispatch({ type: SET_MONTH_NET, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TRANSACTION_ERROR,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const setSixMonthMax = () => {\r\n  return {\r\n    type: SET_6_MONTH_MAX,\r\n  };\r\n};\r\nexport const setSixMonthNet = () => {\r\n  return {\r\n    type: SET_6_MONTH_NET,\r\n  };\r\n};\r\nexport const setMonthTotals = (month) => {\r\n  return { type: SET_MONTH_TOTALS, payload: month };\r\n};\r\n\r\nexport const setMonthNetPercent = () => {\r\n  return { type: SET_MONTH_NET_PERCENT };\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nfunction NavBarSecondary(props) {\r\n  return (\r\n    <nav className='navbar navbar-expand-sm bg-light navbar-light small-font'>\r\n      <div className='container'>\r\n        <button\r\n          className='navbar-toggler'\r\n          data-toggle='collapse'\r\n          data-target='#navbarCollapse2'\r\n        >\r\n          <span className='navbar-toggler-icon'></span>\r\n        </button>\r\n        <div\r\n          className='collapse small-medium-font navbar-collapse justify-content-between mx-5'\r\n          id='navbarCollapse2'\r\n        >\r\n          <ul className='navbar-nav '>\r\n            <li className='nav-item'>\r\n              <Link to='/overview' className='nav-link'>\r\n                OVERVIEW\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <ul className='navbar-nav '>\r\n            <li className='nav-item '>\r\n              <Link to='/transactions' className='nav-link'>\r\n                TRANSACTIONS\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <ul className='navbar-nav '>\r\n            <li className='nav-item '>\r\n              <Link to='/goals' className='nav-link'>\r\n                GOALS\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <ul className='navbar-nav '>\r\n            <li className='nav-item '>\r\n              <Link to='/budgets' className='nav-link'>\r\n                BUDGETS{' '}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <ul className='navbar-nav '>\r\n            <li className='nav-item px-2 '>\r\n              <Link to='/trends' className='nav-link'>\r\n                TRENDS{' '}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <ul className='navbar-nav '>\r\n            <li className='nav-item active item-hl'>\r\n              <Link to='/waystosave' className='nav-link'>\r\n                WAYS TO SAVE\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavBarSecondary;\r\n","import axios from 'axios';\r\n\r\nconst authAxios = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n});\r\n\r\nexport { authAxios };\r\n"],"sourceRoot":""}