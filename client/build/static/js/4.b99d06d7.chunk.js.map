{"version":3,"sources":["actions/AccountActions.js","components/common/Card.js","components/common/CardBody.js","actions/BudgetCategoriesActions.js","components/common/Container.js","actions/ClickAction.js","components/Transactions/AccountTypesFilter.js","components/Transactions/FilterByAccount.js","components/Transactions/TransactionsLeftColumn.js","components/Transactions/UnselectedTableRow.js","components/Transactions/SelectedTableRow.js","components/Transactions/TransactionTable.js","components/Transactions/TransactionsRightColumn.js","components/Transactions/AddTransactionModal.js","pages/Transactions.js"],"names":["setLoading","type","SET_ACCOUNT_LOADING","getAccounts","dispatch","a","authAxios","get","data","GET_ACCOUNTS","payload","ACCOUNT_ERROR","addAccount","account","post","ADD_ACCOUNT","filterAccountTypes","FILTER_ACCOUNT_TYPES","setCash","SET_CASH","setDebt","SET_DEBT","setTotal","SET_TOTAL","setCashPercent","SET_CASH_PERCENTAGE_BAR","setDebtPercent","SET_DEBT_PERCENTAGE_BAR","setTotalPercent","SET_NET_PERCENTAGE_BAR","Card","children","classSpecifics","className","CardBody","addBudgetCategory","budget","ADD_BUDGET_CATEGORY","getBudgetSubCategories","category","GET_BUDGET_SUBCATEGORIES","getBudgetCategories","GET_BUDGETS_CATEGORY","updateBudgetCategory","console","log","put","_id","UPDATE_BUDGET_CATEGORY","Container","margin","setClick","item","SET_CLICK","connect","state","clickable","getTransactionsByAccountCategory","clickStatus","useState","hover","setHover","style","backgroundColor","borderRadius","fontSize","uiName","backendName","map","key","onClick","onMouseEnter","onMouseLeave","float","accounts","getAccountTransactions","getTransactions","accountList","length","accountCategory","cursor","institution","accountName","TransactionsLeftColumn","props","Fragment","setSelectedTransaction","transaction","maxWidth","shortDate","description","subCategory","Intl","NumberFormat","currency","format","amount","transactions","updateTransaction","selectedTransaction","setShortDate","setDescription","setCategory","setSubCategory","setAmount","updatedTransaction","useEffect","width","height","name","defaultValue","onChange","e","target","value","transactionList","preventTransactionReRender","borderColor","cash","debt","formatMoney","data-toggle","data-target","auth","budgetCategories","addTransaction","isUserAuthenticated","setAuthInfo","isAdmin","setAccount","id","htmlFor","hiddenAccountNumber","split","join","slice","href","data-dismiss","logout","allowTransactionReRender"],"mappings":"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","file":"static/js/4.b99d06d7.chunk.js","sourcesContent":["import {\r\n  FILTER_ACCOUNT_TYPES,\r\n  SET_CASH,\r\n  ADD_ACCOUNT,\r\n  ACCOUNT_ERROR,\r\n  SET_DEBT,\r\n  SET_ACCOUNT_LOADING,\r\n  SET_TOTAL,\r\n  SET_CASH_PERCENTAGE_BAR,\r\n  SET_DEBT_PERCENTAGE_BAR,\r\n  SET_NET_PERCENTAGE_BAR,\r\n  GET_ACCOUNTS,\r\n} from '../actions/types';\r\nimport { authAxios } from '../utils/authFetch';\r\n\r\nconst setLoading = () => {\r\n  return {\r\n    type: SET_ACCOUNT_LOADING,\r\n  };\r\n};\r\nexport const getAccounts = () => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const { data } = await authAxios.get('/accounts/getAccounts');\r\n    dispatch({ type: GET_ACCOUNTS, payload: data });\r\n  } catch (error) {\r\n    setLoading();\r\n    dispatch({\r\n      type: ACCOUNT_ERROR,\r\n      // payload: data.error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addAccount = (account) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const { data } = await authAxios.post('/accounts/createAccount', account);\r\n    dispatch({\r\n      type: ADD_ACCOUNT,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ACCOUNT_ERROR,\r\n      // payload: data.error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const filterAccountTypes = () => {\r\n  return { type: FILTER_ACCOUNT_TYPES };\r\n};\r\n\r\nexport const setCash = () => {\r\n  return { type: SET_CASH };\r\n};\r\nexport const setDebt = () => {\r\n  return { type: SET_DEBT };\r\n};\r\nexport const setTotal = () => {\r\n  return { type: SET_TOTAL };\r\n};\r\n\r\nexport const setCashPercent = () => {\r\n  return { type: SET_CASH_PERCENTAGE_BAR };\r\n};\r\nexport const setDebtPercent = () => {\r\n  return { type: SET_DEBT_PERCENTAGE_BAR };\r\n};\r\nexport const setTotalPercent = () => {\r\n  return { type: SET_NET_PERCENTAGE_BAR };\r\n};\r\n","import React from 'react';\r\n\r\nfunction Card({ children, classSpecifics }) {\r\n  return <div className={`card ${classSpecifics}`}>{children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nfunction CardBody({ children, classSpecifics }) {\r\n  return <div className={`card-body ${classSpecifics}`}>{children}</div>;\r\n}\r\n\r\nexport default CardBody;\r\n","import {\r\n  ADD_BUDGET_CATEGORY,\r\n  GET_BUDGETS_CATEGORY,\r\n  UPDATE_BUDGET_CATEGORY,\r\n  DELETE_BUDGET_CATEGORY,\r\n  GET_BUDGET_SUBCATEGORIES,\r\n} from '../actions/types';\r\nimport { authAxios } from '../utils/authFetch';\r\n\r\nexport const addBudgetCategory = (budget) => async (dispatch) => {\r\n  const { data } = await authAxios.post('/budgetCategories/add', budget);\r\n\r\n  dispatch({\r\n    type: ADD_BUDGET_CATEGORY,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const getBudgetSubCategories = (category) => async (dispatch) => {\r\n  const { data } = await authAxios.get(\r\n    `/budgetCategories/getSubcategories/${category}`\r\n  );\r\n\r\n  dispatch({\r\n    type: GET_BUDGET_SUBCATEGORIES,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const getBudgetCategories = () => async (dispatch) => {\r\n  const { data } = await authAxios.get('/budgetCategories');\r\n  dispatch({\r\n    type: GET_BUDGETS_CATEGORY,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const updateBudgetCategory = (budget) => async (dispatch) => {\r\n  console.log(budget);\r\n  const { data } = await authAxios.put(\r\n    `/budgetCategories/update/${budget._id}`,\r\n    budget\r\n  );\r\n\r\n  dispatch({\r\n    type: UPDATE_BUDGET_CATEGORY,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const deleteBudgetCategory = (budget) => async (dispatch) => {\r\n  const { data } = await authAxios.post(\r\n    `/budgetCategories/delete/${budget._id}`,\r\n    budget\r\n  );\r\n\r\n  dispatch({\r\n    type: DELETE_BUDGET_CATEGORY,\r\n    payload: data,\r\n  });\r\n};\r\n","import React from 'react';\r\n\r\nfunction Container({ children, margin }) {\r\n  return (\r\n    <div className={`container ${margin}`}>\r\n      <div className='row  justify-content-md-center'>{children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Container;\r\n","import { SET_CLICK } from '../actions/types';\r\n\r\nexport const setClick = (item) => {\r\n  return {\r\n    type: SET_CLICK,\r\n    payload: item,\r\n  };\r\n};\r\n","import React, { useState } from 'react';\r\nimport Card from '../common/Card';\r\nimport CardBody from '../common/CardBody';\r\nimport { getTransactionsByAccountCategory } from '../../actions/transactionActions';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { setClick } from './../../actions/ClickAction';\r\n\r\nfunction AccountTypesFilter({\r\n  clickable: { clickStatus },\r\n  getTransactionsByAccountCategory,\r\n  setClick,\r\n}) {\r\n  const [hover, setHover] = useState('');\r\n\r\n  //object array created to make route cleaner on backend\r\n  const accountFilters = [\r\n    { uiName: 'Cash & Credit', backendName: 'Cash & Credit' },\r\n    { uiName: 'Investments', backendName: 'Investment' },\r\n    { uiName: 'Cash Only', backendName: 'Cash' },\r\n    { uiName: 'Loan', backendName: 'Loan' },\r\n  ];\r\n\r\n  return (\r\n    <Card classSpecifics='m-0 bg-light border-0'>\r\n      <div\r\n        className='card-header pb-3 text-dark m-0'\r\n        style={{ backgroundColor: '#e8ebee', borderRadius: '0rem' }}\r\n      >\r\n        Type\r\n      </div>\r\n      <CardBody classSpecifics='p-0'>\r\n        <ul\r\n          className='list-group bg-light m-0'\r\n          style={{ fontSize: '.9rem', borderRadius: '0rem' }}\r\n        >\r\n          {accountFilters.map((account) => (\r\n            <li\r\n              key={account.uiName}\r\n              className={`list-group-item bg-${\r\n                clickStatus.uiName === account.uiName ? 'success' : 'light'\r\n              } p-2`}\r\n              onClick={() => setClick(account)}\r\n              onMouseEnter={() => setHover(account)}\r\n              onMouseLeave={() => setHover('')}\r\n            >\r\n              {/* eslint-disable-next-line */}\r\n              <a\r\n                className={`text text-${\r\n                  clickStatus.uiName === account.uiName\r\n                    ? 'white'\r\n                    : hover === account.uiName\r\n                    ? 'success'\r\n                    : 'dark'\r\n                } text-decoration-none`}\r\n                onClick={() => {\r\n                  getTransactionsByAccountCategory(account.backendName);\r\n                }}\r\n                style={{ float: 'left' }}\r\n              >\r\n                {account.uiName}\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\nconst mapStatetoProps = (state) => ({\r\n  clickable: state.clickable,\r\n});\r\nexport default connect(mapStatetoProps, {\r\n  getTransactionsByAccountCategory,\r\n  setClick,\r\n})(AccountTypesFilter);\r\n","import React, { useState } from 'react';\r\nimport Card from '../common/Card';\r\nimport CardBody from '../common/CardBody';\r\nimport {\r\n  getAccountTransactions,\r\n  getTransactions,\r\n} from '../../actions/transactionActions';\r\nimport { connect } from 'react-redux';\r\nimport { setClick } from './../../actions/ClickAction';\r\nfunction FilterByAccount({\r\n  accounts: { accountList },\r\n  clickable: { clickStatus },\r\n  setClick,\r\n  getAccountTransactions,\r\n  getTransactions,\r\n}) {\r\n  const [hover, setHover] = useState(false);\r\n  return (\r\n    <Card classSpecifics='m-0 bg-light border-0'>\r\n      <div\r\n        className='card-header pb-3 text-dark m-0'\r\n        style={{ backgroundColor: '#e8ebee', borderRadius: '0rem' }}\r\n      >\r\n        Accounts\r\n      </div>\r\n      <CardBody classSpecifics='p-0'>\r\n        <ul className='list-group  m-0' style={{ borderRadius: '0rem' }}>\r\n          <li\r\n            className={`list-group-item bg-${\r\n              clickStatus === 'Accounts' ? 'success' : 'light'\r\n            } pl-3 pt-2   text-${\r\n              clickStatus === 'Accounts'\r\n                ? 'white'\r\n                : hover === 'Accounts'\r\n                ? 'success'\r\n                : 'dark'\r\n            } text-decoration-none`}\r\n            onClick={() => {\r\n              setClick('Accounts');\r\n            }}\r\n            onMouseEnter={() => setHover('Accounts')}\r\n            onMouseLeave={() => setHover('')}\r\n          >\r\n            {/* eslint-disable-next-line */}\r\n            <a onClick={() => getTransactions()} style={{ float: 'left' }}>\r\n              <h5 className='medium-large-font'>All Accounts</h5>\r\n              <small className='medium-font'>{`${accountList.length} accounts`}</small>\r\n            </a>\r\n          </li>\r\n          {accountList.map(\r\n            (account) =>\r\n              // changing font and background color\r\n              //on click and on hover\r\n              account.accountCategory !== 'Property' && (\r\n                <li\r\n                  key={account._id}\r\n                  className={`list-group-item medium-large-font bg-${\r\n                    clickStatus === account ? 'success' : 'light'\r\n                  } px-3 py-2 \r\n              text-${\r\n                clickStatus === account\r\n                  ? 'white'\r\n                  : hover === account\r\n                  ? 'success'\r\n                  : 'dark'\r\n              } text-decoration-none`}\r\n                  onClick={() => setClick(account)}\r\n                  onMouseEnter={() => setHover(account)}\r\n                  onMouseLeave={() => setHover('')}\r\n                  style={{ cursor: 'pointer' }}\r\n                >\r\n                  {/* eslint-disable-next-line */}\r\n                  <a\r\n                    className={`d-block`}\r\n                    onClick={() => getAccountTransactions(account)}\r\n                  >\r\n                    {account.institution}\r\n                  </a>\r\n                  <div>\r\n                    <small onClick={() => getAccountTransactions(account)}>\r\n                      {account.accountName}\r\n                    </small>\r\n                  </div>\r\n                </li>\r\n              )\r\n          )}\r\n        </ul>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\nconst mapStatetoProps = (state) => ({\r\n  accounts: state.accounts,\r\n  clickable: state.clickable,\r\n});\r\nexport default connect(mapStatetoProps, {\r\n  getAccountTransactions,\r\n  getTransactions,\r\n  setClick,\r\n})(FilterByAccount);\r\n","import React from 'react';\r\nimport AccountTypesFilter from './AccountTypesFilter';\r\nimport FilterByAccount from './FilterByAccount';\r\n\r\nfunction TransactionsLeftColumn(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <div className='col-md-5 col-lg-4 p-5 '>\r\n        <AccountTypesFilter />\r\n        <FilterByAccount />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default TransactionsLeftColumn;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setSelectedTransaction } from '../../actions/transactionActions';\r\n\r\nfunction UnselectedTableRow({ transaction, setSelectedTransaction }) {\r\n  return (\r\n    <tr\r\n      className='text-align-center'\r\n      key={transaction._id}\r\n      onClick={() => setSelectedTransaction(transaction)}\r\n    >\r\n      {/* <td className='selected-transaction-row'>\r\n        <input type='checkbox' />\r\n      </td> */}\r\n      <td className='unselected-transaction-row' style={{ maxWidth: '80px' }}>\r\n        {transaction.shortDate}\r\n      </td>\r\n      <td className='unselected-transaction-row' style={{ maxWidth: '130px' }}>\r\n        {transaction.description}\r\n      </td>\r\n      <td className='unselected-transaction-row' style={{ maxWidth: '95px' }}>\r\n        {transaction.subCategory === ''\r\n          ? transaction.category\r\n          : transaction.subCategory}\r\n      </td>\r\n      {/* <td\r\n        className='unselected-transaction-row'\r\n        style={{ maxWidth: '80px' }}\r\n      ></td> */}\r\n      <td className='unselected-transaction-row' style={{ maxWidth: '90px' }}>\r\n        {new Intl.NumberFormat('en-US', {\r\n          style: 'currency',\r\n          currency: 'USD',\r\n        }).format(transaction.amount)}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default connect(null, { setSelectedTransaction })(UnselectedTableRow);\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  updateTransaction,\r\n  setSelectedTransaction,\r\n  getTransactions,\r\n} from '../../actions/transactionActions';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction SelectedTableRow({\r\n  updateTransaction,\r\n  transactions: { selectedTransaction },\r\n}) {\r\n  const [shortDate, setShortDate] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [subCategory, setSubCategory] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n\r\n  const updatedTransaction = {\r\n    _id: selectedTransaction._id,\r\n    shortDate,\r\n    description,\r\n    accountName: 'value',\r\n    category,\r\n    subCategory,\r\n    amount,\r\n  };\r\n\r\n  useEffect(() => {\r\n    setShortDate(selectedTransaction.shortDate);\r\n    setDescription(selectedTransaction.description);\r\n    setCategory(selectedTransaction.category);\r\n    setSubCategory(selectedTransaction.subCategory);\r\n    setAmount(selectedTransaction.amount);\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <tr\r\n      key={selectedTransaction._id}\r\n      className='no-hover '\r\n      onMouseLeave={() => updateTransaction(updatedTransaction)}\r\n    >\r\n      {/* <td className='selected-transaction-row'>\r\n        <div className=''>\r\n          <input type='checkbox' />\r\n        </div>\r\n      </td> */}\r\n      <td className='selected-transaction-row' style={{ maxWidth: '70px' }}>\r\n        <input\r\n          className=''\r\n          type='text'\r\n          style={{ width: '95%', height: '1.23rem' }}\r\n          name='short-date'\r\n          defaultValue={shortDate}\r\n          onChange={(e) => setShortDate(e.target.value)}\r\n        />\r\n      </td>\r\n      <td className='selected-transaction-row' style={{ maxWidth: '90px' }}>\r\n        <input\r\n          style={{ width: '95%', height: '1.23rem' }}\r\n          type='text'\r\n          name='description'\r\n          defaultValue={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n      </td>\r\n\r\n      <td className='selected-transaction-row' style={{ maxWidth: '85px' }}>\r\n        <input\r\n          style={{ width: '95%', height: '1.23rem' }}\r\n          type='text'\r\n          defaultValue={category}\r\n          onChange={(e) => setCategory(e.target.value)}\r\n        />\r\n      </td>\r\n      {/* \r\n      <td style={{ maxWidth: '80px' }}></td> */}\r\n      <td className='selected-transaction-row' style={{ maxWidth: '85px' }}>\r\n        <input\r\n          className=''\r\n          style={{ width: '95%', height: '1.23rem' }}\r\n          type='text'\r\n          defaultValue={\r\n            //   new Intl.NumberFormat('en-US', {\r\n            //   style: 'currency',\r\n            //   currency: 'USD',\r\n            // }).format(\r\n            amount\r\n          }\r\n          onChange={(e) => setAmount(e.target.value)}\r\n        />\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\nconst mapStatetoProps = (state) => ({\r\n  transactions: state.transactions,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n  updateTransaction,\r\n  setSelectedTransaction,\r\n  getTransactions,\r\n})(SelectedTableRow);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getTransactions } from './../../actions/transactionActions';\r\nimport { getAccounts } from './../../actions/AccountActions';\r\nimport UnselectedTableRow from './UnselectedTableRow';\r\nimport SelectedTableRow from './SelectedTableRow';\r\n\r\nfunction TransactionTable({\r\n  transactions: {\r\n    transactionList,\r\n    preventTransactionReRender,\r\n    selectedTransaction,\r\n  },\r\n  getTransactions,\r\n  getAccounts,\r\n}) {\r\n  console.log(preventTransactionReRender);\r\n  useEffect(() => {\r\n    if (preventTransactionReRender === false) {\r\n      getTransactions();\r\n    }\r\n    getAccounts();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <table\r\n        className='table table-striped table-hover table-bordered'\r\n        style={{ fontSize: '0.8rem', borderColor: '#999' }}\r\n      >\r\n        <thead className='text-small'>\r\n          <tr className='table-header'>\r\n            {/* <th></th> */}\r\n            <th>Date</th>\r\n            <th>Description</th>\r\n            <th>Category</th>\r\n            {/* <th>Split</th> */}\r\n            <th>Amount</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody style={{ cursor: 'pointer' }}>\r\n          {transactionList &&\r\n            transactionList.map((transaction) =>\r\n              transaction === selectedTransaction ? (\r\n                <SelectedTableRow key={transaction._id} />\r\n              ) : (\r\n                <UnselectedTableRow\r\n                  transaction={transaction}\r\n                  key={transaction._id}\r\n                />\r\n              )\r\n            )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => ({\r\n  transactions: state.transactions,\r\n});\r\n\r\nexport default connect(mapStatetoProps, {\r\n  getTransactions,\r\n  getAccounts,\r\n})(TransactionTable);\r\n","import React, { useEffect } from 'react';\r\nimport TransactionTable from './TransactionTable';\r\nimport { connect } from 'react-redux';\r\nimport { getBudgetCategories } from './../../actions/BudgetCategoriesActions';\r\nimport { setCash, setDebt } from '../../actions/AccountActions';\r\n\r\nfunction TransactionsRightColumn({\r\n  getBudgetCategories,\r\n  accounts: { cash, debt, accountList },\r\n  setCash,\r\n  setDebt,\r\n}) {\r\n  useEffect(() => {\r\n    setCash();\r\n    setDebt();\r\n    //eslint-disable-next-line\r\n  }, [accountList]);\r\n\r\n  const setBudgetList = () => {\r\n    getBudgetCategories();\r\n  };\r\n\r\n  const formatMoney = (amount) => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n    }).format(amount);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className='col-md-6 col-lg-7 py-5'>\r\n        <div className='border-bottom d-flex'>\r\n          <div className='mr-auto align-self-center'>\r\n            <h2>All Cash & Credit Accounts</h2>\r\n            <p className='medium-font'>{`You have ${accountList.length} accounts`}</p>\r\n          </div>\r\n          {/* <div className='ml-auto align-self-center'>\r\n            <nav className='navbar '>\r\n              <form className='form-inline'>\r\n                <input\r\n                  className='form-control mr-sm-2'\r\n                  type='search'\r\n                  placeholder='Search'\r\n                  aria-label='Search'\r\n                />\r\n                <button\r\n                  className='btn btn-outline-success my-2 my-sm-0'\r\n                  type='submit'\r\n                >\r\n                  Search\r\n                </button>\r\n              </form>\r\n            </nav>\r\n          </div> */}\r\n        </div>\r\n        <div className='d-flex'>\r\n          <div className='align-self-center p-2'>\r\n            <span className='small-medium-font-grey'>TOTAL CASH</span>\r\n            <h2 className='text-success large-font'>{formatMoney(cash)}</h2>\r\n          </div>\r\n          <div className='align-self-center p-2'>\r\n            <span className='small-medium-font-grey'>TOTAL DEBT</span>\r\n            <h2 className='large-font'>{`-${formatMoney(debt)}`}</h2>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className='btn btn-outline-secondary my-3'\r\n          data-toggle='modal'\r\n          data-target='#addTransaction'\r\n          type='button'\r\n          onClick={setBudgetList}\r\n        >\r\n          + Transaction\r\n        </button>\r\n        <TransactionTable />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => ({\r\n  accounts: state.accounts,\r\n});\r\nexport default connect(mapStatetoProps, {\r\n  getBudgetCategories,\r\n  setCash,\r\n  setDebt,\r\n})(TransactionsRightColumn);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  addTransaction,\r\n  getTransactions,\r\n} from '../../actions/transactionActions';\r\nimport {\r\n  isUserAuthenticated,\r\n  setAuthInfo,\r\n  isAdmin,\r\n} from '../../actions/authActions';\r\nimport PropTypes from 'prop-types';\r\nfunction AddTransactionModal({\r\n  isUserAuthenticated,\r\n  setAuthInfo,\r\n  addTransaction,\r\n  isAdmin,\r\n  getTransactions,\r\n  accounts: { accountList },\r\n}) {\r\n  useEffect(() => {\r\n    isUserAuthenticated();\r\n\r\n    return () => {\r\n      setAuthInfo();\r\n      isAdmin();\r\n    };\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  const [accountName, setAccount] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [subCategory, setSubCategory] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n\r\n  const onSubmit = () => {\r\n    const transaction = {\r\n      accountName: accountName.slice(0, -9),\r\n      description,\r\n      category,\r\n      subCategory,\r\n      amount,\r\n    };\r\n    addTransaction(transaction);\r\n    getTransactions();\r\n    setAccount('');\r\n    setDescription('');\r\n    setCategory('');\r\n    setSubCategory('');\r\n    setAmount('');\r\n  };\r\n  return (\r\n    <div id='addTransaction' className='modal'>\r\n      <div className='modal-dialog'>\r\n        <div className='modal-content p-3'>\r\n          <h2>Add Transaction</h2>\r\n          <div className='modal-body'>\r\n            <div className='form-group'>\r\n              <label>Description</label>\r\n              <input\r\n                type='text'\r\n                name='description'\r\n                value={description}\r\n                className='form-control'\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              />\r\n            </div>\r\n            <label htmlFor=''>Account</label>\r\n            <div className='row'>\r\n              <div className='input-field'>\r\n                <select\r\n                  name='accountName'\r\n                  value={accountName}\r\n                  className='browser-default'\r\n                  onChange={(e) => setAccount(e.target.value)}\r\n                >\r\n                  <option value=''>Select Account</option>\r\n                  {accountList.map((a) => (\r\n                    <option\r\n                      key={a._id}\r\n                      value={`${a.accountName} ${a.hiddenAccountNumber\r\n                        .split(' ')\r\n                        .join('')\r\n                        .slice(8)}`}\r\n                    >\r\n                      {`${a.accountName} ${a.hiddenAccountNumber\r\n                        .split(' ')\r\n                        .join('')\r\n                        .slice(8)}`}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            {/* <label htmlFor=''>Category</label>\r\n            <div className='dropdown'>\r\n              <input\r\n                className='form-control'\r\n                type='button'\r\n                id='dropdownCategoryMenu'\r\n                data-toggle='dropdown'\r\n                aria-haspopup='true'\r\n                aria-expanded='false'\r\n              />\r\n\r\n              <div\r\n                className='dropdown-menu m-0'\r\n                aria-labelledby='dropdownCategoryMenu'\r\n              >\r\n                {budgetCategoryList.map((b) => (\r\n                  <>\r\n                    <a className='dropdown-item' href='#'>\r\n                      <button\r\n                        className='btn btn-primary dropdown-toggle'\r\n                        type='button'\r\n                        value={b.category}\r\n                        id='dropdownSubCategory'\r\n                        data-toggle='dropdown'\r\n                        aria-haspopup='true'\r\n                        aria-expanded='false'\r\n                        onMouseOver={() => setCategory(b.category)}\r\n                      >\r\n                        {b.category}\r\n                      </button>\r\n                    </a>\r\n                    <div\r\n                      className='dropdown-menu'\r\n                      aria-labelledby='dropdownSubCategory'\r\n                    >\r\n                      {b.subCategories.map((item) => (\r\n                        <a\r\n                          value={item.subCategory}\r\n                          className='dropdown-item'\r\n                          href='#'\r\n                          onMouseOver={(e) => setCategory(e.target.value)}\r\n                        >\r\n                          {item.subCategory}\r\n                        </a>\r\n                      ))}\r\n                    </div>\r\n                  </>\r\n                ))}\r\n              </div>\r\n            </div> */}\r\n            <div className='form-group'>\r\n              <label htmlFor=''>Category</label>\r\n              <input\r\n                type='text'\r\n                name='category'\r\n                value={category}\r\n                className='form-control'\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className='form-group'>\r\n              <label htmlFor=''>Category</label>\r\n              <input\r\n                type='text'\r\n                name='subCategory'\r\n                value={subCategory}\r\n                className='form-control'\r\n                onChange={(e) => setSubCategory(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className='form-group'>\r\n              <label htmlFor=''>Amount</label>\r\n              <input\r\n                type='text'\r\n                name='amount'\r\n                value={amount}\r\n                className='form-control'\r\n                onChange={(e) => setAmount(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className='modal-footer'>\r\n              <a\r\n                href='/#'\r\n                data-dismiss='modal'\r\n                onClick={onSubmit}\r\n                className='btn btn-primary'\r\n              >\r\n                Add Transaction\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nAddTransactionModal.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  setAuthInfo: PropTypes.func.isRequired,\r\n  addTransaction: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  accounts: state.accounts,\r\n  budgetCategories: state.budgetCategories,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  addTransaction,\r\n  isUserAuthenticated,\r\n  setAuthInfo,\r\n  getTransactions,\r\n  isAdmin,\r\n})(AddTransactionModal);\r\n","import React, { useEffect } from 'react';\r\n\r\nimport TransactionsLeftColumn from '../components/Transactions/TransactionsLeftColumn';\r\nimport TransactionsRightColumn from '../components/Transactions/TransactionsRightColumn';\r\nimport {\r\n  getTransactions,\r\n  allowTransactionReRender,\r\n} from '../actions/transactionActions';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AddTransactionModal from '../components/Transactions/AddTransactionModal';\r\nimport {\r\n  logout,\r\n  isUserAuthenticated,\r\n  setAuthInfo,\r\n} from '../actions/authActions';\r\nimport Container from '../components/common/Container';\r\n\r\nfunction Transactions({\r\n  isUserAuthenticated,\r\n  allowTransactionReRender,\r\n  setAuthInfo,\r\n}) {\r\n  useEffect(() => {\r\n    setAuthInfo();\r\n    isUserAuthenticated();\r\n    return () => {\r\n      console.log('hello');\r\n      allowTransactionReRender();\r\n    };\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section>\r\n        <Container>\r\n          <AddTransactionModal />\r\n          <TransactionsLeftColumn />\r\n          <TransactionsRightColumn />\r\n        </Container>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default connect(null, {\r\n  logout,\r\n  setAuthInfo,\r\n  getTransactions,\r\n  allowTransactionReRender,\r\n  isUserAuthenticated,\r\n})(Transactions);\r\n"],"sourceRoot":""}