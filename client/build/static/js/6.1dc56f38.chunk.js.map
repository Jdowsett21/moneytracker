{"version":3,"sources":["actions/BudgetActions.js","actions/BudgetCategoriesActions.js","actions/monthActions.js","components/Budgets/BudgetsLeftColumn.js","components/Budgets/Middle/MonthSelector.js","components/Budgets/AddBudgetModal.js","components/Budgets/Middle/BudgetItem.js","components/Budgets/Middle/BudgetList.js","components/Budgets/Middle/NonBudgetedItem.js","components/Budgets/Middle/NonBudgetedTransactions.js","components/Transactions/ManageBudgetCategoryModal.js","components/Budgets/AddBudgetCategoryModal.js","components/Budgets/BudgetsMiddleColumn.js","components/Budgets/BudgetsRightColumn.js","pages/Budgets.js"],"names":["addBudget","budget","dispatch","a","authAxios","post","data","type","ADD_BUDGET","payload","getBudgets","get","GET_BUDGETS","incrementBudget","put","_id","INCREMENT_BUDGET","decrementBudget","DECREMENT_BUDGET","setBudgetMonthSum","BUDGET_INCOME_SUM","BUDGET_SPENDING_SUM","addBudgetCategory","ADD_BUDGET_CATEGORY","getBudgetSubCategories","category","GET_BUDGET_SUBCATEGORIES","getBudgetCategories","GET_BUDGETS_CATEGORY","updateBudgetCategory","console","log","UPDATE_BUDGET_CATEGORY","setHoveredMonth","index","SET_HOVERED_MONTH","setHoveredBudgetMonth","month","SET_HOVERED_BUDGET_MONTH","setMonth","SET_MONTH","connect","state","budgets","transactions","months","getMonthTypeSum","budgetList","budgetIncomeSum","budgetSpendingSum","spendingSum","incomeSum","nonBudgetedIncomeTransactions","useState","incomeLength","setIncomeLength","otherIncomeLength","setOtherIncomeLength","useEffect","filter","length","className","style","marginTop","Intl","NumberFormat","currency","format","isUserAuthenticated","setHoveredMonthColor","listMonth","hoveredColor","monthNetColor","hoveredBudgetMonth","onMouseOver","onMouseLeave","href","value","onClick","backgroundColor","budgetValidation","Yup","shape","required","budgetLimit","id","validationSchema","initialValues","subCategory","onSubmit","values","Label","text","FormInput","ariaLabel","name","placeholder","GradientButton","preventTransactionReRendering","setTransactionListByCategory","categoryTotal","ratio","setRatio","barColor","setBarColor","setBackgroundColor","hover","setHover","leftButtonHover","setLeftButtonHover","key","borderTop","to","height","width","marginBottom","setMonthNet","getTransactionCategories","getMonthsTransactions","getTransactionTotalByCategory","categoryTotals","monthTransactions","Fragment","map","item","object","budgetType","total","transaction","amount","getNonBudgetedTransactions","setTransactionList","getNonBudgetedTransactionsSum","message","nonBudgetedTransferTransactions","nonBudgetedSpendingTransactions","nonBudgetedSpendingSum","nonBudgetedIncomeSum","setTransactions","paymentType","budgetCategories","budgetCategoryList","budgetSubCategories","categoryObject","setCategoryObject","setSubCategory","c","subCategories","toast","addBudgetSub","mongoose","Types","ObjectId","onChange","e","target","closeOnClick","lastTwelveMonths","moment","subtract","data-toggle","data-target","maxWidth","borderColor","auth","logout","setAuthInfo","getTransactions"],"mappings":"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","file":"static/js/6.1dc56f38.chunk.js","sourcesContent":["import {\r\n  ADD_BUDGET,\r\n  GET_BUDGETS,\r\n  BUDGET_INCOME_SUM,\r\n  BUDGET_SPENDING_SUM,\r\n  UPDATE_BUDGET,\r\n  INCREMENT_BUDGET,\r\n  DECREMENT_BUDGET,\r\n  DELETE_BUDGET,\r\n} from '../actions/types';\r\nimport { authAxios } from '../utils/authFetch';\r\n\r\nexport const addBudget = (budget) => async (dispatch) => {\r\n  const { data } = await authAxios.post('/budgets/addBudget', budget);\r\n\r\n  dispatch({\r\n    type: ADD_BUDGET,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const getBudgets = () => async (dispatch) => {\r\n  const { data } = await authAxios.get('/budgets/getBudgets');\r\n\r\n  dispatch({\r\n    type: GET_BUDGETS,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const incrementBudget = (budget) => async (dispatch) => {\r\n  const { data } = await authAxios.put(\r\n    `/budgets/incrementBudget/${budget._id}`,\r\n    budget\r\n  );\r\n  dispatch({\r\n    type: INCREMENT_BUDGET,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const decrementBudget = (budget) => async (dispatch) => {\r\n  const { data } = await authAxios.put(\r\n    `/budgets/decrementBudget/${budget._id}`,\r\n    budget\r\n  );\r\n\r\n  dispatch({\r\n    type: DECREMENT_BUDGET,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const setBudgetMonthSum = (type) => async (dispatch) => {\r\n  const { data } = await authAxios.get(`/budgets/getBudgetType/${type}`);\r\n  type === 'Income'\r\n    ? dispatch({\r\n        type: BUDGET_INCOME_SUM,\r\n        payload: data,\r\n      })\r\n    : dispatch({\r\n        type: BUDGET_SPENDING_SUM,\r\n        payload: data,\r\n      });\r\n};\r\n\r\nexport const updateBudget = (budget) => async (dispatch) => {\r\n  const { data } = await authAxios.put(\r\n    `/budgets/updateBudget/${budget._id}`,\r\n    budget\r\n  );\r\n\r\n  dispatch({\r\n    type: UPDATE_BUDGET,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const deleteBudget = (budget) => async (dispatch) => {\r\n  const { data } = await authAxios.post(\r\n    `/budgets/deleteBudget/${budget._id}`,\r\n    budget\r\n  );\r\n\r\n  dispatch({\r\n    type: DELETE_BUDGET,\r\n    payload: data,\r\n  });\r\n};\r\n","import {\r\n  ADD_BUDGET_CATEGORY,\r\n  GET_BUDGETS_CATEGORY,\r\n  UPDATE_BUDGET_CATEGORY,\r\n  DELETE_BUDGET_CATEGORY,\r\n  GET_BUDGET_SUBCATEGORIES,\r\n} from '../actions/types';\r\nimport { authAxios } from '../utils/authFetch';\r\n\r\nexport const addBudgetCategory = (budget) => async (dispatch) => {\r\n  const { data } = await authAxios.post('/budgetCategories/add', budget);\r\n\r\n  dispatch({\r\n    type: ADD_BUDGET_CATEGORY,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const getBudgetSubCategories = (category) => async (dispatch) => {\r\n  const { data } = await authAxios.get(\r\n    `/budgetCategories/getSubcategories/${category}`\r\n  );\r\n\r\n  dispatch({\r\n    type: GET_BUDGET_SUBCATEGORIES,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const getBudgetCategories = () => async (dispatch) => {\r\n  const { data } = await authAxios.get('/budgetCategories');\r\n  dispatch({\r\n    type: GET_BUDGETS_CATEGORY,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const updateBudgetCategory = (budget) => async (dispatch) => {\r\n  console.log(budget);\r\n  const { data } = await authAxios.put(\r\n    `/budgetCategories/update/${budget._id}`,\r\n    budget\r\n  );\r\n\r\n  dispatch({\r\n    type: UPDATE_BUDGET_CATEGORY,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const deleteBudgetCategory = (budget) => async (dispatch) => {\r\n  const { data } = await authAxios.post(\r\n    `/budgetCategories/delete/${budget._id}`,\r\n    budget\r\n  );\r\n\r\n  dispatch({\r\n    type: DELETE_BUDGET_CATEGORY,\r\n    payload: data,\r\n  });\r\n};\r\n","import {\r\n  SET_MONTH,\r\n  SET_HOVERED_MONTH,\r\n  SET_HOVERED_BUDGET_MONTH,\r\n} from '../actions/types';\r\n\r\nexport const setHoveredMonth = (index) => {\r\n  return {\r\n    type: SET_HOVERED_MONTH,\r\n    payload: index,\r\n  };\r\n};\r\n\r\nexport const setHoveredBudgetMonth = (month) => {\r\n  return {\r\n    type: SET_HOVERED_BUDGET_MONTH,\r\n    payload: month,\r\n  };\r\n};\r\n\r\nexport const setMonth = (month) => {\r\n  return {\r\n    type: SET_MONTH,\r\n    payload: month,\r\n  };\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { setBudgetMonthSum } from '../../actions/BudgetActions';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getMonthTypeSum } from '../../actions/transactionActions';\r\n\r\nfunction BudgetsLeftColumn({\r\n  budgets: { budgetList, budgetIncomeSum, budgetSpendingSum },\r\n  transactions: { spendingSum, incomeSum, nonBudgetedIncomeTransactions },\r\n  months: { month },\r\n  getMonthTypeSum,\r\n  setBudgetMonthSum,\r\n}) {\r\n  //used to ensure spending is lined up with the spending budgets\r\n  //in the left column\r\n  const [incomeLength, setIncomeLength] = useState(0);\r\n\r\n  //also need to account for other income budget items\r\n  //however they are not as large as progress bars\r\n  const [otherIncomeLength, setOtherIncomeLength] = useState(0);\r\n  useEffect(() => {\r\n    getMonthTypeSum(month, 'Deposit', budgetList);\r\n    getMonthTypeSum(month, 'Withdrawal', budgetList);\r\n    setBudgetMonthSum('Spending');\r\n    setBudgetMonthSum('Income');\r\n\r\n    //setting margin multiplier so spending lines up with spending budgets\r\n    setIncomeLength(\r\n      budgetList.filter((budget) => budget.category === 'Income').length\r\n    );\r\n    // setting margin between income and spending in left budgets column when other transaction is added\r\n    setOtherIncomeLength(nonBudgetedIncomeTransactions.length);\r\n\r\n    //eslint-disable-next-line\r\n  }, [month, budgetList]);\r\n\r\n  return (\r\n    <div className='col-lg-4 col-md-3 d-none d-lg-block bg budget-left-background  '>\r\n      <h2 className='text-right' style={{ marginTop: '140px' }}>\r\n        Income\r\n      </h2>\r\n      <div className='text-right'>\r\n        <strong>\r\n          {new Intl.NumberFormat('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD',\r\n          }).format(incomeSum)}{' '}\r\n        </strong>\r\n        <span>so far</span>\r\n      </div>\r\n      <div className='text-right'>\r\n        <span>of</span>\r\n        <strong>\r\n          {new Intl.NumberFormat('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD',\r\n          }).format(budgetIncomeSum)}\r\n        </strong>\r\n      </div>\r\n\r\n      {/* //setting margin so spending left column lines up with spending\r\n      //no matter the number of income budgets/ other income transactions\r\n      //could have turned entire income section into row\r\n     //however wanted to hide certain columns upon page size \r\n     10px is initial buffer if no income budgets or transactions\r\n     each budget item is 70px, other transaciton is 16px*/}\r\n      <h2\r\n        className='text-right'\r\n        style={{\r\n          marginTop: `${\r\n            incomeLength + otherIncomeLength === 0\r\n              ? 10\r\n              : 10 + 70 * incomeLength + 16 * otherIncomeLength\r\n          }px`,\r\n        }}\r\n      >\r\n        Spending\r\n      </h2>\r\n      <div className='text-right'>\r\n        <strong>\r\n          {new Intl.NumberFormat('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD',\r\n          }).format(spendingSum)}{' '}\r\n        </strong>\r\n        <span>so far</span>\r\n      </div>\r\n      <div className='text-right'>\r\n        <span>of</span>\r\n        <strong>\r\n          {new Intl.NumberFormat('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD',\r\n          }).format(budgetSpendingSum)}\r\n        </strong>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  budgets: state.budgets,\r\n  transactions: state.transactions,\r\n  months: state.months,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  setBudgetMonthSum,\r\n  getMonthTypeSum,\r\n})(BudgetsLeftColumn);\r\n","import React, { useEffect } from 'react';\r\nimport { setHoveredMonthColor } from '../../../actions/transactionActions';\r\nimport { connect } from 'react-redux';\r\nimport { setMonth, setHoveredBudgetMonth } from '../../../actions/monthActions';\r\nimport { isUserAuthenticated } from '../../../actions/authActions';\r\n\r\nfunction MonthSelector({\r\n  listMonth,\r\n  setMonth,\r\n  index,\r\n  setHoveredBudgetMonth,\r\n  setHoveredMonthColor,\r\n  transactions: { hoveredColor, monthNetColor },\r\n  months: { month, hoveredBudgetMonth },\r\n  isUserAuthenticated,\r\n}) {\r\n  const settingHover = () => {\r\n    setHoveredBudgetMonth(index) && setHoveredMonthColor(hoveredBudgetMonth);\r\n  };\r\n\r\n  const removingHover = () => {\r\n    setHoveredBudgetMonth('');\r\n    setHoveredMonthColor('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    isUserAuthenticated();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <li\r\n      className='list-group-item '\r\n      onMouseOver={settingHover}\r\n      onMouseLeave={removingHover}\r\n    >\r\n      {/* eslint-disable-next-line */}\r\n      <a\r\n        href='#'\r\n        value={listMonth}\r\n        onClick={() => {\r\n          setMonth(listMonth);\r\n          setHoveredMonthColor('');\r\n        }}\r\n        className='btn py-1 px-2 mt-3 '\r\n        style={{\r\n          backgroundColor:\r\n            listMonth === month\r\n              ? monthNetColor\r\n              : listMonth === hoveredBudgetMonth\r\n              ? hoveredColor\r\n              : '#e9ecef',\r\n        }}\r\n      >\r\n        <span className='text-gray extra-small-font'>{listMonth}</span>\r\n      </a>\r\n    </li>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => ({\r\n  months: state.months,\r\n  transactions: state.transactions,\r\n});\r\nexport default connect(mapStatetoProps, {\r\n  setHoveredBudgetMonth,\r\n  isUserAuthenticated,\r\n  setHoveredMonthColor,\r\n  setMonth,\r\n})(MonthSelector);\r\n","import React from 'react';\r\nimport * as Yup from 'yup';\r\nimport FormInput from '../common/FormInput';\r\nimport { connect } from 'react-redux';\r\nimport { Formik, Form } from 'formik';\r\nimport { addBudget } from '../../actions/BudgetActions';\r\nimport Label from './../common/Label';\r\nimport GradientButton from '../common/GradientButton';\r\nconst budgetValidation = Yup.object().shape({\r\n  category: Yup.string().required('Category is required'),\r\n  budgetLimit: Yup.number().required('Budget Limit is required'),\r\n});\r\n\r\nfunction AddBudgetModal({ addBudget }) {\r\n  return (\r\n    <div id='addBudget' className='modal fade'>\r\n      <div className='modal-dialog'>\r\n        <div className='modal-content'>\r\n          <h2>Create A Budget</h2>\r\n          <div className='modal-body'>\r\n            <Formik\r\n              validationSchema={budgetValidation}\r\n              initialValues={{ category: '', subCategory: '', budgetLimit: '' }}\r\n              onSubmit={(values) => addBudget(values)}\r\n            >\r\n              {() => (\r\n                <Form>\r\n                  {/* <li class='nav-item dropdown'>\r\n                    <a\r\n                      class='nav-link dropdown-toggle'\r\n                      href='#'\r\n                      id='navbarDropdownMenuLink'\r\n                      data-toggle='dropdown'\r\n                      aria-haspopup='true'\r\n                      aria-expanded='false'\r\n                    >\r\n                      {' '}\r\n                    </a>\r\n                    <ul\r\n                      class='dropdown-menu'\r\n                      aria-labelledby='navbarDropdownMenuLink'\r\n                    > */}\r\n                  {/* {budgetCategoryList.map((budget) => (\r\n                        <li class='dropdown-submenu'>\r\n                          <a\r\n                            class='dropdown-item dropdown-toggle'\r\n                            href='http://google.com'\r\n                          >\r\n                            {budget.category}\r\n                          </a>\r\n                          <ul class='dropdown-menu'>\r\n                            {budget.subCategories.map((b) => (\r\n                              <li>\r\n                                <a class='dropdown-item' href='#'>\r\n                                  {b}\r\n                                </a>\r\n                              </li>\r\n                            ))}\r\n                          </ul>\r\n                        </li>\r\n                      ))} */}\r\n                  {/* </ul>\r\n                  </li> */}\r\n                  <Label text='Category' />\r\n                  <FormInput\r\n                    ariaLabel='Category'\r\n                    name='category'\r\n                    type='text'\r\n                    placeholder='Category'\r\n                  />\r\n                  <Label text='SubCategory' />\r\n                  <FormInput\r\n                    ariaLabel='SubCategory'\r\n                    name='subCategory'\r\n                    type='text'\r\n                    placeholder='SubCategory'\r\n                  />\r\n\r\n                  <Label text='Budget Limit' />\r\n                  <FormInput\r\n                    ariaLabel='Budget Limit'\r\n                    name='budgetLimit'\r\n                    type='text'\r\n                    placeholder='Budget Limit'\r\n                  />\r\n                  <GradientButton type='submit' text='Add Budget' />\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(null, { addBudget })(AddBudgetModal);\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  incrementBudget,\r\n  decrementBudget,\r\n} from '../../../actions/BudgetActions';\r\nimport {\r\n  preventTransactionReRendering,\r\n  setTransactionListByCategory,\r\n} from '../../../actions/transactionActions';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nfunction BudgetItem({\r\n  budget,\r\n  categoryTotal,\r\n  incrementBudget,\r\n  decrementBudget,\r\n  months: { month },\r\n  preventTransactionReRendering,\r\n  setTransactionListByCategory,\r\n}) {\r\n  const [ratio, setRatio] = useState('');\r\n  const [barColor, setBarColor] = useState('');\r\n\r\n  //setting hover background\r\n  const [backgroundColor, setBackgroundColor] = useState('');\r\n\r\n  //setting hover for budget item\r\n  const [hover, setHover] = useState(false);\r\n\r\n  const settingHover = () => {\r\n    setHover(true);\r\n  };\r\n\r\n  const removingHover = () => {\r\n    setHover(false);\r\n  };\r\n\r\n  //setting left button hover for increment and decrement budget buttons\r\n  const [leftButtonHover, setLeftButtonHover] = useState(false);\r\n\r\n  const settingLeftButtonHover = () => {\r\n    setLeftButtonHover(true);\r\n  };\r\n\r\n  const removingLeftButtonHover = () => {\r\n    setLeftButtonHover(false);\r\n  };\r\n\r\n  // const [rightButtonHover, setRightButtonHover] = useState(false);\r\n\r\n  // const settingRightButtonHover = () => {\r\n  //   setRightButtonHover(true);\r\n  // };\r\n\r\n  // const removingRightButtonHover = () => {\r\n  //   setRightButtonHover(false);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    setRatio(\r\n      categoryTotal >= budget.budgetLimit\r\n        ? 100\r\n        : (categoryTotal / budget.budgetLimit) * 100\r\n    );\r\n    setBarColor(\r\n      budget.category === 'Income' || categoryTotal / budget.budgetLimit < 0.9\r\n        ? 'success'\r\n        : categoryTotal >= budget.budgetLimit\r\n        ? 'danger'\r\n        : 'warning'\r\n    );\r\n\r\n    setBackgroundColor(\r\n      budget.category === 'Income' || categoryTotal / budget.budgetLimit < 0.9\r\n        ? '#ddf3df'\r\n        : categoryTotal >= budget.budgetLimit\r\n        ? '#f28179'\r\n        : '#eff279'\r\n    );\r\n  }, [categoryTotal, budget]);\r\n\r\n  const increment = () => {\r\n    incrementBudget(budget);\r\n  };\r\n  const decrement = () => {\r\n    decrementBudget(budget);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      key={budget.category}\r\n      onMouseOver={settingHover}\r\n      onMouseLeave={removingHover}\r\n      style={{ borderTop: '#61dafb' }}\r\n    >\r\n      {/* when hovered */}\r\n      {hover && (\r\n        <div\r\n          className={`border border-${barColor} pt-1 mb`}\r\n          //setting background to green if category is income\r\n          style={{\r\n            backgroundColor,\r\n          }}\r\n        >\r\n          <div className='px-3 d-flex align-content-end'>\r\n            <Link\r\n              to='/transactions'\r\n              className='mr-auto text-dark'\r\n              onClick={() => {\r\n                preventTransactionReRendering();\r\n                setTransactionListByCategory(budget, month);\r\n              }}\r\n            >\r\n              {budget.subCategory === '' ? (\r\n                <strong className='small-medium-font '>{`${budget.category}`}</strong>\r\n              ) : (\r\n                <span className='small-medium-font '>{`${budget.category}`}</span>\r\n              )}\r\n              <strong className='small-medium-font'>\r\n                {budget.subCategory === '' ? '' : `: ${budget.subCategory}`}\r\n              </strong>\r\n            </Link>\r\n            <div className='d-flex pb-1'>\r\n              {/* eslint-disable-next-line */}\r\n              <a\r\n                onClick={decrement}\r\n                onMouseOver={settingLeftButtonHover}\r\n                onMouseLeave={removingLeftButtonHover}\r\n                className={`pr-1  rounded-circle fas fa-caret-left fa-xs  align-self-end`}\r\n                style={{\r\n                  backgroundColor: `${\r\n                    leftButtonHover ? 'bg bg-secondary' : ''\r\n                  }`,\r\n                }}\r\n              ></a>\r\n              {/* //removing or adding subcategory */}\r\n              <h2 className='small-medium-font align-self-end'>{`$${budget.budgetLimit} `}</h2>\r\n              {/* eslint-disable-next-line */}\r\n              <a\r\n                onClick={increment}\r\n                // onMouseOver={settingRightButtonHover}\r\n                // onMouseLeave={removingRightButtonHover}\r\n                className={`px-1 fas fa-caret-right fa-xs  align-self-end text-decoration-none`}\r\n              ></a>\r\n              <span className='extra-small-font align-self-end'>expected</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='progress m-1' style={{ height: '12px' }}>\r\n            <div\r\n              className={`progress-bar progress-bar-striped bg-${barColor}`}\r\n              style={{ width: `${ratio}%` }}\r\n            ></div>\r\n          </div>\r\n          <div className='d-flex justify-content-end px-1 pb-1'>\r\n            {/* <a href='/#' className='small-font'>\r\n              Edit Details\r\n            </a> */}\r\n            <span className='small-font i'>{`$${categoryTotal} spent this month`}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {/* //when not hovered */}\r\n      {hover === false && (\r\n        <div className='border border-white pt-1'>\r\n          <div className='d-flex justify-content-between px-3 '>\r\n            {/* //removing or adding subcategory */}\r\n            <div className='mr-auto'>\r\n              {budget.subCategory === '' ? (\r\n                <strong className='small-medium-font '>{`${budget.category}`}</strong>\r\n              ) : (\r\n                <span className='small-medium-font '>{`${budget.category}`}</span>\r\n              )}\r\n              <strong className='small-medium-font'>\r\n                {budget.subCategory === '' ? '' : `: ${budget.subCategory}`}\r\n              </strong>\r\n            </div>\r\n            <div className='d-flex align-self-end pb-1'>\r\n              <h2 className='small-medium-font'>{`${new Intl.NumberFormat(\r\n                'en-US',\r\n                {\r\n                  style: 'currency',\r\n                  currency: 'USD',\r\n                }\r\n              ).format(categoryTotal)} of $${budget.budgetLimit}`}</h2>\r\n            </div>\r\n          </div>\r\n          <div className='progress m-1' style={{ height: '12px' }}>\r\n            <div\r\n              className={`progress-bar progress-bar-striped bg-${barColor}`}\r\n              style={{ width: `${ratio}%` }}\r\n            ></div>\r\n          </div>\r\n          {/* specific margin set so that when bar above is hovered //bar below\r\n          does not shift up or down */}\r\n          <div style={{ marginBottom: '1.5rem' }}></div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  months: state.months,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  decrementBudget,\r\n  preventTransactionReRendering,\r\n  setTransactionListByCategory,\r\n  incrementBudget,\r\n})(BudgetItem);\r\n","import React, { useEffect } from 'react';\r\nimport { getBudgets } from '../../../actions/BudgetActions';\r\nimport { connect } from 'react-redux';\r\nimport BudgetItem from './BudgetItem';\r\nimport {\r\n  getMonthsTransactions,\r\n  getTransactionCategories,\r\n  getTransactionTotalByCategory,\r\n  setMonthNet,\r\n} from '../../../actions/transactionActions';\r\n\r\nfunction BudgetList({\r\n  getBudgets,\r\n  type,\r\n  setMonthNet,\r\n  getTransactionCategories,\r\n  getMonthsTransactions,\r\n  getTransactionTotalByCategory,\r\n  transactions: { categoryTotals, monthTransactions },\r\n  budgets: { budgetList },\r\n  months: { month },\r\n}) {\r\n  useEffect(() => {\r\n    getBudgets();\r\n    getMonthsTransactions(month);\r\n    //eslint-disable-next-line\r\n  }, [month]);\r\n\r\n  useEffect(() => {\r\n    setMonthNet(month);\r\n    getTransactionCategories();\r\n    getTransactionTotalByCategory(budgetList);\r\n    //eslint-disable-next-line\r\n  }, [monthTransactions, budgetList]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className='mt-3 pt-2 ' style={{ borderTop: '1px solid grey' }}>\r\n        {budgetList.map((item) => {\r\n          //accounting for budgets with subcategories that are empty and\r\n          //ensuring they are not added more than once to the budget page\r\n          //eslint-disable-next-line\r\n          return categoryTotals.map((object) => {\r\n            if (\r\n              item.subCategory === object.subCategory &&\r\n              item.category === object.category &&\r\n              item.budgetType === type\r\n            ) {\r\n              return (\r\n                <BudgetItem\r\n                  budget={item}\r\n                  categoryTotal={\r\n                    // ensuring all budget totals are positive numbers\r\n                    object.total < 0 ? object.total * -1 : object.total\r\n                  }\r\n                  key={item}\r\n                />\r\n              );\r\n            }\r\n          });\r\n        })}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  budgets: state.budgets,\r\n  transactions: state.transactions,\r\n  months: state.months,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getBudgets,\r\n  setMonthNet,\r\n  getTransactionCategories,\r\n  getMonthsTransactions,\r\n  getTransactionTotalByCategory,\r\n})(BudgetList);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  setTransactionListByCategory,\r\n  preventTransactionReRendering,\r\n} from '../../../actions/transactionActions';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction NonBudgetedItem({\r\n  months: { month },\r\n  transaction,\r\n  setTransactionListByCategory,\r\n  preventTransactionReRendering,\r\n}) {\r\n  return (\r\n    <li className='d-flex justify-content-between'>\r\n      <Link\r\n        to='/transactions'\r\n        className='small-font'\r\n        onClick={() => {\r\n          preventTransactionReRendering();\r\n          setTransactionListByCategory(transaction, month);\r\n        }}\r\n      >{`${transaction.category}: ${transaction.subCategory}`}</Link>\r\n      <span className='small-font'>\r\n        {new Intl.NumberFormat('en-US', {\r\n          style: 'currency',\r\n          currency: 'USD',\r\n        }).format(transaction.amount)}\r\n      </span>\r\n    </li>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  months: state.months,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  setTransactionListByCategory,\r\n  preventTransactionReRendering,\r\n})(NonBudgetedItem);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  getNonBudgetedTransactions,\r\n  getNonBudgetedTransactionsSum,\r\n  setTransactionList,\r\n  preventTransactionReRendering,\r\n} from '../../../actions/transactionActions';\r\nimport NonBudgetedItem from './NonBudgetedItem';\r\nimport { Link } from 'react-router-dom';\r\nfunction NonBudgetedTransactions({\r\n  type,\r\n  message,\r\n  transactions: {\r\n    nonBudgetedTransferTransactions,\r\n    nonBudgetedIncomeTransactions,\r\n    nonBudgetedSpendingTransactions,\r\n    nonBudgetedSpendingSum,\r\n    nonBudgetedIncomeSum,\r\n  },\r\n  preventTransactionReRendering,\r\n  getNonBudgetedTransactions,\r\n  setTransactionList,\r\n  getNonBudgetedTransactionsSum,\r\n  months: { month },\r\n  budgets: { budgetList },\r\n}) {\r\n  const [transactions, setTransactions] = useState('');\r\n  useEffect(() => {\r\n    //gets the transactions and the sum\r\n    getNonBudgetedTransactions(month, type, budgetList);\r\n    getNonBudgetedTransactionsSum(month, type, budgetList);\r\n    setTransactions(\r\n      type === 'Deposit'\r\n        ? nonBudgetedIncomeTransactions\r\n        : nonBudgetedSpendingTransactions\r\n    ); //eslint-disable-next-line\r\n  }, [month, budgetList]);\r\n  return (\r\n    <ul className='mb-5 px-2'>\r\n      <div className='d-flex justify-content-between '>\r\n        <Link\r\n          to='/transactions'\r\n          className='small-medium-font  text-dark'\r\n          href='#'\r\n          onClick={() => {\r\n            preventTransactionReRendering();\r\n            setTransactionList(transactions, month);\r\n          }}\r\n        >\r\n          {message}\r\n        </Link>\r\n        <span className='small-medium-font'>\r\n          {type === 'Withdrawal'\r\n            ? new Intl.NumberFormat('en-US', {\r\n              style: 'currency',\r\n              currency: 'USD',\r\n            }).format(nonBudgetedSpendingSum)\r\n            : new Intl.NumberFormat('en-US', {\r\n              style: 'currency',\r\n              currency: 'USD',\r\n            }).format(nonBudgetedIncomeSum)}\r\n        </span>\r\n      </div>\r\n\r\n      {type === 'Withdrawal'\r\n        ? nonBudgetedSpendingTransactions.map(\r\n            (transaction) =>\r\n              transaction.paymentType === type && (\r\n                <NonBudgetedItem\r\n                  key={transaction._id}\r\n                  transaction={transaction}\r\n                />\r\n              )\r\n          )\r\n        : nonBudgetedIncomeTransactions.map(\r\n            (transaction) =>\r\n              transaction.paymentType === type && (\r\n                <NonBudgetedItem\r\n                  key={transaction._id}\r\n                  transaction={transaction}\r\n                />\r\n              )\r\n          )}\r\n    </ul>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  transactions: state.transactions,\r\n  months: state.months,\r\n  budgets: state.budgets,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  getNonBudgetedTransactions,\r\n  setTransactionList,\r\n  getNonBudgetedTransactionsSum,\r\n  preventTransactionReRendering,\r\n})(NonBudgetedTransactions);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  updateBudgetCategory,\r\n  getBudgetSubCategories,\r\n} from '../../actions/BudgetCategoriesActions';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport mongoose from 'mongoose';\r\nfunction ManageBudgetCategoryModal({\r\n  getBudgetSubCategories,\r\n  updateBudgetCategory,\r\n  budgetCategories: { budgetCategoryList, budgetSubCategories },\r\n}) {\r\n  const [categoryObject, setCategoryObject] = useState('');\r\n  const [subCategory, setSubCategory] = useState('');\r\n\r\n  useEffect(() => {\r\n    setCategoryObject(budgetCategoryList[0]);\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (budgetCategoryList.length > 0 && categoryObject) {\r\n      getBudgetSubCategories(categoryObject.category);\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [budgetCategoryList, categoryObject]);\r\n\r\n  const onSubmit = () => {\r\n    if (subCategory === '') {\r\n      return toast('Please Enter a Sub Category');\r\n    } else {\r\n      const addBudgetSub = {\r\n        ...categoryObject,\r\n        subCategories: [\r\n          ...categoryObject.subCategories,\r\n          { _id: mongoose.Types.ObjectId(), subCategory: subCategory },\r\n        ],\r\n      };\r\n\r\n      updateBudgetCategory(addBudgetSub);\r\n      setSubCategory('');\r\n      toast('');\r\n    }\r\n  };\r\n  return (\r\n    <div id='budgetCategories' className='modal fade'>\r\n      <div className='modal-dialog'>\r\n        <div className='modal-content'>\r\n          <h2>Manage Your Categories</h2>\r\n          <div className='modal-body'>\r\n            <div className='d-flex justify-content-between'>\r\n              <ul>\r\n                {budgetCategoryList.map((c) => (\r\n                  <li>\r\n                    <a\r\n                      href='/#'\r\n                      className='extra-small-font'\r\n                      onClick={() => setCategoryObject(c)}\r\n                      key={c._id}\r\n                    >\r\n                      {c.category}\r\n                    </a>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n              <div>\r\n                <ul>\r\n                  {budgetSubCategories &&\r\n                    budgetSubCategories[0].subCategories.map((category) => (\r\n                      <li>{category.subCategory}</li>\r\n                    ))}\r\n                  <a href='/#' onClick={onSubmit} className='btn btn-primary'>\r\n                    Add Category\r\n                  </a>\r\n                  <div className='form-group'>\r\n                    <input\r\n                      type='text'\r\n                      name='subCategory'\r\n                      value={subCategory}\r\n                      className='form-control'\r\n                      onChange={(e) => setSubCategory(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <ToastContainer closeOnClick />\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  budgetCategories: state.budgetCategories,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  updateBudgetCategory,\r\n  getBudgetSubCategories,\r\n})(ManageBudgetCategoryModal);\r\n","import React from 'react';\r\nimport * as Yup from 'yup';\r\nimport FormInput from '../common/FormInput';\r\nimport { connect } from 'react-redux';\r\nimport { Formik, Form } from 'formik';\r\nimport { addBudgetCategory } from '../../actions/BudgetCategoriesActions';\r\nimport Label from '../common/Label';\r\nimport GradientButton from '../common/GradientButton';\r\nconst budgetValidation = Yup.object().shape({\r\n  category: Yup.string().required('Category is required'),\r\n});\r\n\r\nfunction AddBudgetCategoryModal({\r\n  addBudgetCategory,\r\n  budgetCategories: { budgetCategoryList },\r\n}) {\r\n  return (\r\n    <div id='addBudgetCategory' className='modal fade'>\r\n      <div className='modal-dialog'>\r\n        <div className='modal-content'>\r\n          <h2>Create A Budget</h2>\r\n          <div className='modal-body'>\r\n            <Formik\r\n              validationSchema={budgetValidation}\r\n              initialValues={{ category: '', subCategory: '' }}\r\n              onSubmit={(values) => addBudgetCategory(values)}\r\n            >\r\n              {() => (\r\n                <Form>\r\n                  {/* <li class='nav-item dropdown'>\r\n                    <a\r\n                      class='nav-link dropdown-toggle'\r\n                      href='#'\r\n                      id='navbarDropdownMenuLink'\r\n                      data-toggle='dropdown'\r\n                      aria-haspopup='true'\r\n                      aria-expanded='false'\r\n                    >\r\n                      {' '}\r\n                    </a>\r\n                    <ul\r\n                      class='dropdown-menu'\r\n                      aria-labelledby='navbarDropdownMenuLink'\r\n                    >\r\n                      {budgetCategoryList.map((budget) => (\r\n                        <li class='dropdown-submenu'>\r\n                          <a\r\n                            class='dropdown-item dropdown-toggle'\r\n                            href='http://google.com'\r\n                          >\r\n                            {budget.category}\r\n                          </a>\r\n                          <ul class='dropdown-menu'>\r\n                            {budgetCategoryList.map(\r\n                              (b) =>\r\n                                budget.category === b.category && (\r\n                                  <li>\r\n                                    <a class='dropdown-item' href='#'>\r\n                                      {b.subCategory}\r\n                                    </a>\r\n                                  </li>\r\n                                )\r\n                            )}\r\n                          </ul>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </li> */}\r\n                  <Label text='Category' />\r\n                  <FormInput\r\n                    ariaLabel='Category'\r\n                    name='category'\r\n                    type='text'\r\n                    placeholder='Category'\r\n                  />\r\n                  <Label text='subCategory' />\r\n                  <FormInput\r\n                    ariaLabel='subCategory'\r\n                    name='subCategory'\r\n                    type='text'\r\n                    placeholder='subCategory'\r\n                  />\r\n\r\n                  <GradientButton type='submit' text='Add Budget' />\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  budgetCategories: state.budgetCategories,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addBudgetCategory })(\r\n  AddBudgetCategoryModal\r\n);\r\n","import React from 'react';\r\nimport MonthSelector from './Middle/MonthSelector';\r\nimport moment from 'moment';\r\nimport AddBudgetModal from './AddBudgetModal';\r\nimport BudgetList from './Middle/BudgetList';\r\nimport NonBudgetedTransactions from './Middle/NonBudgetedTransactions';\r\nimport ManageBudgetCategoryModal from '../Transactions/ManageBudgetCategoryModal';\r\nimport { getBudgetCategories } from '../../actions/BudgetCategoriesActions';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AddBudgetCategoryModal from './AddBudgetCategoryModal';\r\nfunction BudgetsMiddleColumn({ getBudgetCategories }) {\r\n  const lastTwelveMonths = [\r\n    moment().subtract(11, 'months').format('MMM'),\r\n    moment().subtract(10, 'months').format('MMM'),\r\n    moment().subtract(9, 'months').format('MMM'),\r\n    moment().subtract(8, 'months').format('MMM'),\r\n    moment().subtract(7, 'months').format('MMM'),\r\n    moment().subtract(6, 'months').format('MMM'),\r\n    moment().subtract(5, 'months').format('MMM'),\r\n    moment().subtract(4, 'months').format('MMM'),\r\n    moment().subtract(3, 'months').format('MMM'),\r\n    moment().subtract(2, 'months').format('MMM'),\r\n    moment().subtract(1, 'months').format('MMM'),\r\n    moment().subtract(0, 'months').format('MMM'),\r\n  ];\r\n\r\n  return (\r\n    <div className=' col-lg-5 pr-5 shadow-lg'>\r\n      {/* <h2>{selectedMonth}</h2> */}\r\n      <ul className='list-group list-group-horizontal d-flex justify-content-center'>\r\n        {lastTwelveMonths.map((month, index) => (\r\n          <MonthSelector key={month} index={index} listMonth={month} />\r\n        ))}\r\n      </ul>\r\n      <div className=' d-flex justify-content-end'>\r\n        <button\r\n          className='btn btn-outline-dark my-3'\r\n          data-toggle='modal'\r\n          data-target='#addBudget'\r\n          type='button'\r\n        >\r\n          + Add Budget\r\n        </button>\r\n      </div>\r\n\r\n      <AddBudgetModal />\r\n      <AddBudgetCategoryModal />\r\n      <ManageBudgetCategoryModal />\r\n      <BudgetList type='Income' />\r\n      <NonBudgetedTransactions type='Deposit' message='Other Income' />\r\n      <BudgetList type='Spending' />\r\n      <NonBudgetedTransactions type='Withdrawal' message='Everything Else' />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(null, { getBudgetCategories })(BudgetsMiddleColumn);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction BudgetsRightColumn({\r\n  budgets: { budgetSpendingSum, budgetIncomeSum },\r\n}) {\r\n  return (\r\n    <div\r\n      className='col-md-3 d-none d-lg-block col-lg-3'\r\n      style={{ height: '100%' }}\r\n    >\r\n      <div\r\n        className='card rounded shadow border'\r\n        style={{\r\n          maxWidth: '60%',\r\n          marginTop: '140px',\r\n          borderColor: '#5b5b5b',\r\n        }}\r\n      >\r\n        <div className='card-header p-1'>\r\n          <h2 className='large-font pb-4'>You've budgeted...</h2>\r\n          <div className='d-flex justify-content-between'>\r\n            <h3 className='small-medium-font'>Income:</h3>\r\n\r\n            <h3 className='medium-font'>\r\n              {new Intl.NumberFormat('en-US', {\r\n                style: 'currency',\r\n                currency: 'USD',\r\n              }).format(budgetIncomeSum)}\r\n            </h3>\r\n          </div>\r\n          <div className='d-flex justify-content-between'>\r\n            <h3 className='small-medium-font'>Spending:</h3>\r\n\r\n            <h3 className='small-medium-font text-danger'>\r\n              {budgetSpendingSum > 0\r\n                ? `-${new Intl.NumberFormat('en-US', {\r\n                    style: 'currency',\r\n                    currency: 'USD',\r\n                  }).format(budgetSpendingSum)}`\r\n                : '$0.00'}\r\n            </h3>\r\n          </div>\r\n        </div>\r\n        <div className='card-body p-1'>\r\n          {' '}\r\n          <div className='d-flex justify-content-between'>\r\n            <h3 className='medium-font'>Left Over:</h3>\r\n\r\n            <h3\r\n              className={`medium-font text-${\r\n                budgetIncomeSum > budgetSpendingSum ? 'success' : 'danger'\r\n              }`}\r\n            >\r\n              {new Intl.NumberFormat('en-US', {\r\n                style: 'currency',\r\n                currency: 'USD',\r\n              }).format(budgetIncomeSum - budgetSpendingSum)}\r\n            </h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  budgets: state.budgets,\r\n});\r\n\r\nexport default connect(mapStateToProps)(BudgetsRightColumn);\r\n","import React, { useEffect } from 'react';\r\nimport BudgetsLeftColumn from '../components/Budgets/BudgetsLeftColumn';\r\nimport BudgetsMiddleColumn from '../components/Budgets/BudgetsMiddleColumn';\r\nimport BudgetsRightColumn from '../components/Budgets/BudgetsRightColumn';\r\nimport {\r\n  logout,\r\n  isUserAuthenticated,\r\n  setAuthInfo,\r\n} from '../actions/authActions';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getTransactions } from './../actions/transactionActions';\r\n\r\nfunction Budgets({ isUserAuthenticated, setAuthInfo, months: { month } }) {\r\n  useEffect(() => {\r\n    setAuthInfo();\r\n    isUserAuthenticated();\r\n    //eslint-disable-next-line\r\n  }, [month]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className='container-fluid fixed-bottom-container m-auto'>\r\n        <div className='row d-flex justify-content-start'>\r\n          <BudgetsLeftColumn />\r\n          <BudgetsMiddleColumn />\r\n          <BudgetsRightColumn />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  transactions: state.transactions,\r\n  months: state.months,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  logout,\r\n  setAuthInfo,\r\n  isUserAuthenticated,\r\n  getTransactions,\r\n})(Budgets);\r\n"],"sourceRoot":""}