{"version":3,"sources":["actions/AccountActions.js","components/common/Card.js","components/common/CardBody.js","actions/BudgetActions.js","actions/monthActions.js","components/common/Container.js","components/Overview/AccountCard/AccountItem.js","components/Overview/AccountCard/AccountTitle.js","components/Overview/AccountCard/AccountsList.js","components/common/CardHeader.js","components/Overview/OverviewCardHeader.js","components/Overview/AccountCard/AccountsCard.js","components/Overview/TrendsCard/NetGraph/NetTotalBar.js","components/Overview/TrendsCard/NetGraph/NetTotalGraph.js","components/Overview/TrendsCard/NetGraph/NetTitle.js","components/Overview/TrendsCard/MonthlyGraph/MonthTable.js","components/Overview/TrendsCard/MonthlyGraph/MonthItem.js","utils/useHover.js","components/Overview/TrendsCard/MonthlyGraph/MonthlyNetGraph.js","components/Overview/TrendsCard/TrendsCard.js","components/Overview/OverviewLeftColumn.js","components/Overview/BudgetsCard/BudgetCardItem.js","components/Overview/BudgetsCard/BudgetCardList.js","components/Overview/BudgetsCard/BudgetCard.js","components/Overview/OverviewRightColumn.js","pages/Overview.js"],"names":["setLoading","type","SET_ACCOUNT_LOADING","getAccounts","dispatch","a","authAxios","get","data","GET_ACCOUNTS","payload","ACCOUNT_ERROR","addAccount","account","post","ADD_ACCOUNT","filterAccountTypes","FILTER_ACCOUNT_TYPES","setCash","SET_CASH","setDebt","SET_DEBT","setTotal","SET_TOTAL","setCashPercent","SET_CASH_PERCENTAGE_BAR","setDebtPercent","SET_DEBT_PERCENTAGE_BAR","setTotalPercent","SET_NET_PERCENTAGE_BAR","Card","children","classSpecifics","className","CardBody","addBudget","budget","ADD_BUDGET","getBudgets","GET_BUDGETS","incrementBudget","put","_id","INCREMENT_BUDGET","decrementBudget","DECREMENT_BUDGET","setBudgetMonthSum","BUDGET_INCOME_SUM","BUDGET_SPENDING_SUM","setHoveredMonth","index","SET_HOVERED_MONTH","setHoveredBudgetMonth","month","SET_HOVERED_BUDGET_MONTH","setMonth","SET_MONTH","Container","margin","connect","preventTransactionReRendering","setTransactionListByAccount","Fragment","to","onClick","href","style","float","accountName","Intl","NumberFormat","currency","format","balance","institution","lastUpdated","AccountCardHeader","accountCategory","useState","open","setOpen","cursor","charAt","toUpperCase","slice","state","accountList","accounts","filteredAccounts","setFilterAccount","useEffect","filter","data-toggle","data-target","id","map","key","CardHeader","OverviewCardHeader","title","accountCategories","length","NetTotalBar","text","value","width","cash","debt","cashPercent","debtPercent","total","totalPercent","formatMoney","amount","TrendsCardTitle","fontWeight","MonthTable","monthIncome","monthDebt","monthNet","sixMonthMax","setValue","ref","useRef","handleMouseOver","handleMouseOut","node","current","addEventListener","removeEventListener","useHover","hoverRef","isHovered","moment","height","top","months","transactions","getTransactions","setMonthNet","setMonthTotals","setMonthNetPercent","setSixMonthNet","setSixMonthMax","hoveredMonth","monthGraphNet","sixMonthNetTotals","transactionList","subtract","NetTitle","OverviewLeftColumn","props","setTransactionListByCategory","categoryTotal","ratio","setRatio","barColor","setBarColor","budgetLimit","category","subCategory","budgets","getTransactionCategories","getMonthsTransactions","getTransactionTotalByCategory","categoryTotals","monthTransactions","budgetList","object","budgetType","OverviewRightColumn","logout","setAuthInfo","isUserAuthenticated"],"mappings":"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","file":"static/js/3.3d89558f.chunk.js","sourcesContent":["import {\r\n  FILTER_ACCOUNT_TYPES,\r\n  SET_CASH,\r\n  ADD_ACCOUNT,\r\n  ACCOUNT_ERROR,\r\n  SET_DEBT,\r\n  SET_ACCOUNT_LOADING,\r\n  SET_TOTAL,\r\n  SET_CASH_PERCENTAGE_BAR,\r\n  SET_DEBT_PERCENTAGE_BAR,\r\n  SET_NET_PERCENTAGE_BAR,\r\n  GET_ACCOUNTS,\r\n} from '../actions/types';\r\nimport { authAxios } from '../utils/authFetch';\r\n\r\nconst setLoading = () => {\r\n  return {\r\n    type: SET_ACCOUNT_LOADING,\r\n  };\r\n};\r\nexport const getAccounts = () => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const { data } = await authAxios.get('/accounts/getAccounts');\r\n    dispatch({ type: GET_ACCOUNTS, payload: data });\r\n  } catch (error) {\r\n    setLoading();\r\n    dispatch({\r\n      type: ACCOUNT_ERROR,\r\n      // payload: data.error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addAccount = (account) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const { data } = await authAxios.post('/accounts/createAccount', account);\r\n    dispatch({\r\n      type: ADD_ACCOUNT,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ACCOUNT_ERROR,\r\n      // payload: data.error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const filterAccountTypes = () => {\r\n  return { type: FILTER_ACCOUNT_TYPES };\r\n};\r\n\r\nexport const setCash = () => {\r\n  return { type: SET_CASH };\r\n};\r\nexport const setDebt = () => {\r\n  return { type: SET_DEBT };\r\n};\r\nexport const setTotal = () => {\r\n  return { type: SET_TOTAL };\r\n};\r\n\r\nexport const setCashPercent = () => {\r\n  return { type: SET_CASH_PERCENTAGE_BAR };\r\n};\r\nexport const setDebtPercent = () => {\r\n  return { type: SET_DEBT_PERCENTAGE_BAR };\r\n};\r\nexport const setTotalPercent = () => {\r\n  return { type: SET_NET_PERCENTAGE_BAR };\r\n};\r\n","import React from 'react';\r\n\r\nfunction Card({ children, classSpecifics }) {\r\n  return <div className={`card ${classSpecifics}`}>{children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nfunction CardBody({ children, classSpecifics }) {\r\n  return <div className={`card-body ${classSpecifics}`}>{children}</div>;\r\n}\r\n\r\nexport default CardBody;\r\n","import {\r\n  ADD_BUDGET,\r\n  GET_BUDGETS,\r\n  BUDGET_INCOME_SUM,\r\n  BUDGET_SPENDING_SUM,\r\n  UPDATE_BUDGET,\r\n  INCREMENT_BUDGET,\r\n  DECREMENT_BUDGET,\r\n  DELETE_BUDGET,\r\n} from '../actions/types';\r\nimport { authAxios } from '../utils/authFetch';\r\n\r\nexport const addBudget = (budget) => async (dispatch) => {\r\n  const { data } = await authAxios.post('/budgets/addBudget', budget);\r\n\r\n  dispatch({\r\n    type: ADD_BUDGET,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const getBudgets = () => async (dispatch) => {\r\n  const { data } = await authAxios.get('/budgets/getBudgets');\r\n\r\n  dispatch({\r\n    type: GET_BUDGETS,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const incrementBudget = (budget) => async (dispatch) => {\r\n  const { data } = await authAxios.put(\r\n    `/budgets/incrementBudget/${budget._id}`,\r\n    budget\r\n  );\r\n  dispatch({\r\n    type: INCREMENT_BUDGET,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const decrementBudget = (budget) => async (dispatch) => {\r\n  const { data } = await authAxios.put(\r\n    `/budgets/decrementBudget/${budget._id}`,\r\n    budget\r\n  );\r\n\r\n  dispatch({\r\n    type: DECREMENT_BUDGET,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const setBudgetMonthSum = (type) => async (dispatch) => {\r\n  const { data } = await authAxios.get(`/budgets/getBudgetType/${type}`);\r\n  type === 'Income'\r\n    ? dispatch({\r\n        type: BUDGET_INCOME_SUM,\r\n        payload: data,\r\n      })\r\n    : dispatch({\r\n        type: BUDGET_SPENDING_SUM,\r\n        payload: data,\r\n      });\r\n};\r\n\r\nexport const updateBudget = (budget) => async (dispatch) => {\r\n  const { data } = await authAxios.put(\r\n    `/budgets/updateBudget/${budget._id}`,\r\n    budget\r\n  );\r\n\r\n  dispatch({\r\n    type: UPDATE_BUDGET,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const deleteBudget = (budget) => async (dispatch) => {\r\n  const { data } = await authAxios.post(\r\n    `/budgets/deleteBudget/${budget._id}`,\r\n    budget\r\n  );\r\n\r\n  dispatch({\r\n    type: DELETE_BUDGET,\r\n    payload: data,\r\n  });\r\n};\r\n","import {\r\n  SET_MONTH,\r\n  SET_HOVERED_MONTH,\r\n  SET_HOVERED_BUDGET_MONTH,\r\n} from '../actions/types';\r\n\r\nexport const setHoveredMonth = (index) => {\r\n  return {\r\n    type: SET_HOVERED_MONTH,\r\n    payload: index,\r\n  };\r\n};\r\n\r\nexport const setHoveredBudgetMonth = (month) => {\r\n  return {\r\n    type: SET_HOVERED_BUDGET_MONTH,\r\n    payload: month,\r\n  };\r\n};\r\n\r\nexport const setMonth = (month) => {\r\n  return {\r\n    type: SET_MONTH,\r\n    payload: month,\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\nfunction Container({ children, margin }) {\r\n  return (\r\n    <div className={`container ${margin}`}>\r\n      <div className='row  justify-content-md-center'>{children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  preventTransactionReRendering,\r\n  setTransactionListByAccount,\r\n} from './../../../actions/transactionActions';\r\nfunction AccountItem({\r\n  account,\r\n  preventTransactionReRendering,\r\n  setTransactionListByAccount,\r\n}) {\r\n  return (\r\n    <React.Fragment>\r\n      <li className='list-group-item'>\r\n        {/* this needs to be a link to account transactions */}\r\n        <Link\r\n          to='/transactions'\r\n          onClick={() => {\r\n            preventTransactionReRendering();\r\n            setTransactionListByAccount(account);\r\n          }}\r\n          className='card-text small-medium-font text-dark'\r\n          href='/#'\r\n          style={{ float: 'left' }}\r\n        >\r\n          {account.accountName}\r\n        </Link>\r\n\r\n        <p className='card-text small-medium-font ' style={{ float: 'right' }}>\r\n          {new Intl.NumberFormat('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD',\r\n          }).format(account.balance)}\r\n        </p>\r\n      </li>\r\n      <li className='list-group-item text-muted'>\r\n        <p className='card-text small-font ' style={{ float: 'left' }}>\r\n          {account.institution}\r\n        </p>\r\n\r\n        <p className='card-text small-font' style={{ float: 'right' }}>\r\n          {account.lastUpdated}\r\n        </p>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default connect(null, {\r\n  preventTransactionReRendering,\r\n  setTransactionListByAccount,\r\n})(AccountItem);\r\n","import React, { useState } from 'react';\r\n\r\nfunction AccountCardHeader({ accountCategory }) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const iconSelector = () => {\r\n    if (accountCategory === 'Cash') {\r\n      return 'money-bill-alt';\r\n    }\r\n    if (accountCategory === 'Investment') {\r\n      return 'signal';\r\n    }\r\n    if (accountCategory === 'Credit') {\r\n      return 'credit-card';\r\n    }\r\n    if (accountCategory === 'Loan') {\r\n      return 'graduation-cap';\r\n    }\r\n    return 'home';\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <p\r\n        onClick={() => setOpen(!open)}\r\n        className='card-heading-background mb-4 medium-font py-2'\r\n        style={{ cursor: 'pointer' }}\r\n      >\r\n        <i className={`fas fa-chevron-${open ? 'right' : 'down'} px-2`}></i>\r\n        <i className={`fas fa-${iconSelector()} pr-2`}></i>\r\n        {`${accountCategory.charAt(0).toUpperCase()}${accountCategory.slice(\r\n          1\r\n        )}`}\r\n      </p>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AccountCardHeader;\r\n","import React, { useState, useEffect } from 'react';\r\nimport AccountItem from './AccountItem';\r\nimport { connect } from 'react-redux';\r\nimport AccountCardHeader from './AccountTitle';\r\n\r\nfunction AccountsList({ accountCategory, accountList }) {\r\n  const [filteredAccounts, setFilterAccount] = useState([]);\r\n  const [open] = useState('down');\r\n\r\n  useEffect(() => {\r\n    setFilterAccount(\r\n      accountList &&\r\n        accountList.filter((account) => {\r\n          return accountCategory === account.accountCategory;\r\n        })\r\n    );\r\n  }, [accountList, accountCategory]);\r\n  return (\r\n    <div className='container'>\r\n      <div data-toggle='collapse' data-target={`#${accountCategory}`}>\r\n        <AccountCardHeader accountCategory={accountCategory} open={open} />\r\n      </div>\r\n      <ul id={accountCategory} className='collapse show  list-group '>\r\n        {filteredAccounts.map((account) => (\r\n          <AccountItem key={account.accountName} account={account} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nconst mapStatetoProps = (state) => ({\r\n  accountList: state.accounts.accountList,\r\n});\r\nexport default connect(mapStatetoProps)(AccountsList);\r\n","import React from 'react';\r\n\r\nfunction CardHeader({ children, classSpecifics }) {\r\n  return <div className={`card-header pb-4 ${classSpecifics}`}>{children}</div>;\r\n}\r\n\r\nexport default CardHeader;\r\n","import React from 'react';\r\n\r\nfunction OverviewCardHeader({ title }) {\r\n  return (\r\n    <React.Fragment>\r\n      <small className='font-medium' style={{ float: 'left' }}>\r\n        {title}\r\n      </small>\r\n      {/* <i className='fas fa-cog' style={{ float: 'right' }}></i> */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default OverviewCardHeader;\r\n","import React, { useEffect } from 'react';\r\nimport AccountsList from '../AccountCard/AccountsList';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  filterAccountTypes,\r\n  getAccounts,\r\n} from '../../../actions/AccountActions';\r\nimport Card from '../../common/Card';\r\nimport CardHeader from '../../common/CardHeader';\r\nimport CardBody from '../../common/CardBody';\r\nimport OverviewCardHeader from '../OverviewCardHeader';\r\n\r\nfunction AccountsCard({\r\n  accounts: { accountList, accountCategories },\r\n  filterAccountTypes,\r\n  getAccounts,\r\n}) {\r\n  useEffect(() => {\r\n    getAccounts();\r\n  }, [getAccounts]);\r\n\r\n  useEffect(() => {\r\n    if (accountList.length !== 0) {\r\n      filterAccountTypes();\r\n    }\r\n  }, [accountList, filterAccountTypes]);\r\n\r\n  return (\r\n    <Card classSpecifics='m-2'>\r\n      <CardHeader>\r\n        <OverviewCardHeader title='Accounts' />\r\n      </CardHeader>\r\n      <CardBody>\r\n        {accountCategories &&\r\n          accountCategories.map((account) => (\r\n            <AccountsList key={account} accountCategory={account} />\r\n          ))}\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => ({\r\n  accounts: state.accounts,\r\n});\r\n\r\nexport default connect(mapStatetoProps, { filterAccountTypes, getAccounts })(\r\n  AccountsCard\r\n);\r\n","import React from 'react';\r\n\r\nfunction NetTotalBar({ text, type, style, value }) {\r\n  return (\r\n    <li className={type} style={{ width: style }}>\r\n      <label className='small-font-grey text-muted mr-1'>{text}</label>\r\n      <var className='small-font text-dark'>{value}</var>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default NetTotalBar;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport NetTotalBar from './NetTotalBar';\r\nimport {\r\n  setCash,\r\n  setCashPercent,\r\n  setDebt,\r\n  setDebtPercent,\r\n  setTotal,\r\n  setTotalPercent,\r\n} from '../../../../actions/AccountActions';\r\n\r\nfunction NetTotalGraph({\r\n  accounts: {\r\n    cash,\r\n    debt,\r\n    cashPercent,\r\n    debtPercent,\r\n    total,\r\n    totalPercent,\r\n    accountList,\r\n  },\r\n  setCash,\r\n  setCashPercent,\r\n  setDebt,\r\n  setDebtPercent,\r\n  setTotal,\r\n  setTotalPercent,\r\n}) {\r\n  useEffect(() => {\r\n    if (accountList.length !== 0) {\r\n      setCash();\r\n      setDebt();\r\n      setTotal();\r\n      setCashPercent();\r\n      setDebtPercent();\r\n      setTotalPercent();\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [accountList]);\r\n\r\n  const formatMoney = (amount) => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n    }).format(amount);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <ul className='horizontal-bar'>\r\n        <NetTotalBar\r\n          style={cashPercent}\r\n          type='cash'\r\n          text='Cash'\r\n          value={formatMoney(cash)}\r\n        />\r\n        <NetTotalBar\r\n          style={debtPercent}\r\n          type='debt'\r\n          text='Debt'\r\n          value={formatMoney(debt)}\r\n        />\r\n        <NetTotalBar\r\n          style={totalPercent}\r\n          type={cash > debt ? 'cash' : 'debt'}\r\n          text='Total'\r\n          value={formatMoney(total)}\r\n        />\r\n      </ul>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => ({\r\n  accounts: state.accounts,\r\n});\r\nexport default connect(mapStatetoProps, {\r\n  setCash,\r\n  setCashPercent,\r\n  setDebt,\r\n  setDebtPercent,\r\n  setTotal,\r\n  setTotalPercent,\r\n})(NetTotalGraph);\r\n","import React from 'react';\r\n\r\nfunction TrendsCardTitle({ title }) {\r\n  return (\r\n    <h2 className='small-font pl-2' style={{ fontWeight: '400' }}>\r\n      {title}\r\n    </h2>\r\n  );\r\n}\r\n\r\nexport default TrendsCardTitle;\r\n","import React from 'react';\r\n\r\nfunction MonthTable({ monthIncome, monthDebt, monthNet }) {\r\n  return (\r\n    <React.Fragment>\r\n      <table className='table mb-0 text-center small-medium-font'>\r\n        <thead>\r\n          <tr>\r\n            <th>Income</th>\r\n            <th>Spent</th>\r\n            <th>Net</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              {new Intl.NumberFormat('en-US', {\r\n                style: 'currency',\r\n                currency: 'USD',\r\n              }).format(monthIncome)}\r\n            </td>\r\n            <td>\r\n              {new Intl.NumberFormat('en-US', {\r\n                style: 'currency',\r\n                currency: 'USD',\r\n              }).format(monthDebt)}\r\n            </td>\r\n            <td>\r\n              {new Intl.NumberFormat('en-US', {\r\n                style: 'currency',\r\n                currency: 'USD',\r\n              }).format(monthNet)}\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MonthTable;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setHoveredMonth } from '../../../../actions/monthActions';\r\nimport { useHover } from '../../../../utils/useHover';\r\nimport moment from 'moment';\r\nfunction MonthItem({\r\n  type,\r\n  index,\r\n  month,\r\n  setHoveredMonth,\r\n  monthNet,\r\n  sixMonthMax,\r\n}) {\r\n  const [hoverRef, isHovered] = useHover();\r\n  useEffect(() => {\r\n    isHovered ? setHoveredMonth(index) : moment().format('MMM');\r\n    //eslint-disable-next-line\r\n  }, [isHovered, index]);\r\n\r\n  return (\r\n    <li className={type} ref={hoverRef}>\r\n      <label className='text-extra-small text-muted'>{month}</label>\r\n      {/* eslint-disable-next-line */}\r\n      <a\r\n        className={monthNet > 0 ? '' : 'negative'}\r\n        href='/#'\r\n        style={{\r\n          height: `${\r\n            monthNet === sixMonthMax || monthNet === sixMonthMax * -1\r\n              ? 47\r\n              : (monthNet < 0 && sixMonthMax > 0) ||\r\n                (monthNet > 0 && sixMonthMax < 0)\r\n              ? (monthNet / sixMonthMax) * 50 * -1\r\n              : (monthNet / sixMonthMax) * 50\r\n          }%`,\r\n\r\n          top: `${\r\n            monthNet < 0\r\n              ? 50\r\n              : monthNet > 0 && sixMonthMax < 0\r\n              ? 50 - (monthNet / sixMonthMax) * 50 * -1\r\n              : 50 - (monthNet / sixMonthMax) * 50\r\n          }%`,\r\n        }}\r\n      ></a>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default connect(null, {\r\n  setHoveredMonth,\r\n})(MonthItem);\r\n","import { useRef, useState, useEffect } from 'react';\r\n\r\nexport const useHover = () => {\r\n  const [value, setValue] = useState(false);\r\n\r\n  const ref = useRef(null);\r\n\r\n  const handleMouseOver = () => setValue(true);\r\n  const handleMouseOut = () => setValue(false);\r\n\r\n  useEffect(() => {\r\n    const node = ref.current;\r\n    if (node) {\r\n      node.addEventListener('mouseover', handleMouseOver);\r\n      node.addEventListener('mouseout', handleMouseOut);\r\n\r\n      return () => {\r\n        node.removeEventListener('mouseover', handleMouseOver);\r\n        node.removeEventListener('mouseout', handleMouseOut);\r\n      };\r\n    }\r\n\r\n    // If we didn't set up any listeners, we won't need to unsubscribe from anything.\r\n    return () => {};\r\n  }, [ref]); // Ensure we remove and re-add the listeners if and only if the ref changes.\r\n\r\n  return [ref, value];\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport {\r\n  getTransactions,\r\n  setMonthNet,\r\n  setMonthTotals,\r\n  setMonthNetPercent,\r\n  setSixMonthNet,\r\n  setSixMonthMax,\r\n} from '../../../../actions/transactionActions';\r\nimport { connect } from 'react-redux';\r\nimport MonthTable from '../MonthlyGraph/MonthTable';\r\nimport moment from 'moment';\r\nimport MonthItem from './MonthItem';\r\nfunction MonthlyNetGraph({\r\n  getTransactions,\r\n  setMonthTotals,\r\n  setSixMonthNet,\r\n  setSixMonthMax,\r\n  months: { hoveredMonth },\r\n  transactions: {\r\n    monthGraphNet,\r\n    monthIncome,\r\n    monthDebt,\r\n    sixMonthNetTotals,\r\n    sixMonthMax,\r\n    transactionList,\r\n  },\r\n}) {\r\n  const months = [\r\n    moment().subtract(5, 'months').format('MMM'),\r\n    moment().subtract(4, 'months').format('MMM'),\r\n    moment().subtract(3, 'months').format('MMM'),\r\n    moment().subtract(2, 'months').format('MMM'),\r\n    moment().subtract(1, 'months').format('MMM'),\r\n    moment().format('MMM'),\r\n  ];\r\n\r\n  useEffect(() => {\r\n    getTransactions();\r\n\r\n    if (transactionList && transactionList.length > 0) {\r\n      setSixMonthNet();\r\n      setSixMonthMax();\r\n      setMonthTotals(hoveredMonth);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [transactionList.length, hoveredMonth]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h2 className='small-font month-header'>{`Net Income ${hoveredMonth}`}</h2>\r\n      <ul className='vertical-bar'>\r\n        {months.map((month, index) => (\r\n          <MonthItem\r\n            index={index}\r\n            key={month}\r\n            type='small-font month'\r\n            monthNet={sixMonthNetTotals && sixMonthNetTotals[index]}\r\n            sixMonthMax={sixMonthMax}\r\n            month={month}\r\n          ></MonthItem>\r\n        ))}\r\n        <li className='graphLines small-font'>\r\n          <div className='graphTop'>\r\n            <aside>\r\n              <p>{`$${sixMonthMax}`}</p>\r\n            </aside>\r\n          </div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div className='graphMiddle'>\r\n            <aside>\r\n              <p>0</p>\r\n            </aside>\r\n          </div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div className='graphBottom'>\r\n            <aside>\r\n              <p>{`$${-1 * sixMonthMax}`}</p>\r\n            </aside>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n      <MonthTable\r\n        monthDebt={monthDebt}\r\n        monthIncome={monthIncome}\r\n        monthNet={monthGraphNet}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst MapStatetoProps = (state) => ({\r\n  months: state.months,\r\n  transactions: state.transactions,\r\n  accounts: state.accounts,\r\n});\r\nexport default connect(MapStatetoProps, {\r\n  getTransactions,\r\n  setMonthNet,\r\n  setMonthTotals,\r\n  setMonthNetPercent,\r\n  setSixMonthNet,\r\n  setSixMonthMax,\r\n})(MonthlyNetGraph);\r\n","import React, { useEffect } from 'react';\r\nimport Card from '../../common/Card';\r\nimport CardBody from '../../common/CardBody';\r\nimport CardHeader from '../../common/CardHeader';\r\n\r\nimport OverviewCardHeader from '../OverviewCardHeader';\r\nimport NetTotalGraph from './NetGraph/NetTotalGraph';\r\nimport NetTitle from './NetGraph/NetTitle';\r\nimport MonthlyNetGraph from './MonthlyGraph/MonthlyNetGraph';\r\nimport { getTransactions } from '../../../actions/transactionActions';\r\nimport { connect } from 'react-redux';\r\nfunction TrendsCard({ getTransactions }) {\r\n  useEffect(() => {\r\n    getTransactions();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Card classSpecifics='m-2'>\r\n      <CardHeader>\r\n        <OverviewCardHeader title='Trends' />\r\n      </CardHeader>\r\n      <CardBody>\r\n        <NetTitle title={' Cash vs. Credit Card and Debt'} />\r\n        <NetTotalGraph />\r\n        <MonthlyNetGraph />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default connect(null, { getTransactions })(TrendsCard);\r\n","import React from 'react';\r\nimport AccountsCard from './AccountCard/AccountsCard';\r\n// import InsightsCard from './OtherCards/InsightsCard';\r\nimport TrendsCard from './TrendsCard/TrendsCard';\r\n// import FeedbackCard from './OtherCards/FeedbackCard';\r\n\r\nfunction OverviewLeftColumn(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <div className='col-lg-4 p-3'>\r\n        <AccountsCard />\r\n        {/* <InsightsCard /> */}\r\n        <TrendsCard />\r\n        {/* <FeedbackCard /> */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default OverviewLeftColumn;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  preventTransactionReRendering,\r\n  setTransactionListByCategory,\r\n} from './../../../actions/transactionActions';\r\n\r\nfunction BudgetCardItem({\r\n  budget,\r\n  categoryTotal,\r\n  preventTransactionReRendering,\r\n  setTransactionListByCategory,\r\n  months: { month },\r\n}) {\r\n  const [ratio, setRatio] = useState('');\r\n  const [barColor, setBarColor] = useState('');\r\n\r\n  useEffect(() => {\r\n    setRatio(\r\n      categoryTotal >= budget.budgetLimit\r\n        ? 100\r\n        : (categoryTotal / budget.budgetLimit) * 100\r\n    );\r\n    setBarColor(\r\n      categoryTotal >= budget.budgetLimit\r\n        ? 'danger'\r\n        : categoryTotal / budget.budgetLimit < 0.8\r\n        ? 'success'\r\n        : 'warning'\r\n    );\r\n  }, [budget, categoryTotal]);\r\n\r\n  return (\r\n    <div key={budget.category}>\r\n      <div className='d-flex justify-content-between px-3'>\r\n        <div className='mr-auto'>\r\n          <Link\r\n            to='/transactions'\r\n            className='mr-auto text-dark'\r\n            onClick={() => {\r\n              preventTransactionReRendering();\r\n              setTransactionListByCategory(budget, month);\r\n            }}\r\n          >\r\n            {budget.subCategory === '' ? (\r\n              <strong className='small-medium-font '>{`${budget.category}`}</strong>\r\n            ) : (\r\n              <span className='small-medium-font '>{`${budget.category}`}</span>\r\n            )}\r\n            <strong className='small-medium-font'>\r\n              {budget.subCategory === '' ? '' : `: ${budget.subCategory}`}\r\n            </strong>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='progress m-2'>\r\n        <div\r\n          className={`progress-bar bg-${barColor}`}\r\n          style={{ width: `${ratio}%` }}\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  months: state.months,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  preventTransactionReRendering,\r\n  setTransactionListByCategory,\r\n})(BudgetCardItem);\r\n","import React, { useEffect } from 'react';\r\nimport { getBudgets } from '../../../actions/BudgetActions';\r\nimport { connect } from 'react-redux';\r\nimport BudgetCardItem from './BudgetCardItem';\r\nimport {\r\n  getMonthsTransactions,\r\n  getTransactionCategories,\r\n  getTransactionTotalByCategory,\r\n  setMonthNet,\r\n} from '../../../actions/transactionActions';\r\nimport moment from 'moment';\r\nfunction BudgetCardList({\r\n  getBudgets,\r\n  setMonthNet,\r\n  getTransactionCategories,\r\n  getMonthsTransactions,\r\n  getTransactionTotalByCategory,\r\n  transactions: { categoryTotals, monthTransactions },\r\n  budgets: { budgetList },\r\n  months: { month },\r\n}) {\r\n  useEffect(() => {\r\n    getBudgets();\r\n    getMonthsTransactions(moment().format('MMM'));\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setMonthNet(month);\r\n    getTransactionCategories();\r\n    getTransactionTotalByCategory(budgetList);\r\n    //eslint-disable-next-line\r\n  }, [monthTransactions, budgetList]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {budgetList.map((budget) => {\r\n        //eslint-disable-next-line\r\n        return categoryTotals.map((object) => {\r\n          //overview page does not have income items\r\n          if (\r\n            budget.subCategory === object.subCategory &&\r\n            budget.category === object.category &&\r\n            budget.budgetType !== 'Income'\r\n          ) {\r\n            return (\r\n              <BudgetCardItem\r\n                budget={budget}\r\n                categoryTotal={\r\n                  object.total < 0 ? object.total * -1 : object.total\r\n                }\r\n                key={budget}\r\n              />\r\n            );\r\n          }\r\n        });\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  budgets: state.budgets,\r\n  transactions: state.transactions,\r\n  months: state.months,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getBudgets,\r\n  setMonthNet,\r\n  getTransactionCategories,\r\n  getMonthsTransactions,\r\n  getTransactionTotalByCategory,\r\n})(BudgetCardList);\r\n","import React, { useEffect } from 'react';\r\nimport Card from '../../common/Card';\r\nimport CardHeader from '../../common/CardHeader';\r\nimport CardBody from '../../common/CardBody';\r\nimport OverviewCardHeader from '../OverviewCardHeader';\r\nimport { connect } from 'react-redux';\r\nimport { getTransactions } from '../../../actions/transactionActions';\r\nimport moment from 'moment';\r\nimport BudgetCardList from './BudgetCardList';\r\n\r\n//need an array for each budget\r\n//need to filter array but each budget type and then reduce it to get the value\r\n\r\n//need to have an array of the budget total\r\n//need to be able to create a budget\r\nfunction BudgetCard({ getTransactions }) {\r\n  useEffect(() => {\r\n    getTransactions();\r\n  });\r\n  return (\r\n    <Card classSpecifics='m-2'>\r\n      <CardHeader>\r\n        <OverviewCardHeader title={`${moment().format('MMMM')} Budgets`} />\r\n      </CardHeader>\r\n      <CardBody>\r\n        <BudgetCardList />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default connect(null, { getTransactions })(BudgetCard);\r\n","import React from 'react';\r\n// import GoalsCard from '../Overview/OtherCards/GoalsCard';\r\n// import SpendingCard from '../Overview/OtherCards/SpendingCard';\r\nimport BudgetCard from '../Overview/BudgetsCard/BudgetCard';\r\n\r\nfunction OverviewRightColumn(props) {\r\n  return (\r\n    <div className='col-lg-7 p-3'>\r\n      {/* <GoalsCard /> */}\r\n      {/* <SpendingCard /> */}\r\n      <BudgetCard />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OverviewRightColumn;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport OverviewLeftColumn from '../components/Overview/OverviewLeftColumn';\r\nimport Container from '../components/common/Container';\r\nimport OverviewRightColumn from '../components/Overview/OverviewRightColumn';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  logout,\r\n  isUserAuthenticated,\r\n  setAuthInfo,\r\n} from '../actions/authActions';\r\n\r\nfunction Overview({ isUserAuthenticated, setAuthInfo }) {\r\n  useEffect(() => {\r\n    setAuthInfo();\r\n    isUserAuthenticated();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section>\r\n        <Container>\r\n          <OverviewLeftColumn />\r\n          <OverviewRightColumn />\r\n        </Container>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default connect(null, {\r\n  logout,\r\n  setAuthInfo,\r\n  isUserAuthenticated,\r\n})(Overview);\r\n"],"sourceRoot":""}